[1, 22:12:23] Apply changes to cs306_schema: Applying object changes ...
[1, 22:12:39] Applying changes to cs306_schema...: 
[1, 22:12:47] Apply changes to cs306_schema: Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'DEFAULT' at line 1
SQL Statement:
CREATE SCHEMA `cs306_schema` DEFAULT CHARACTER SET DEFAULT 


[2, 22:13:27] Apply changes to cs306_schema: Applying object changes ...
[2, 22:13:41] Applying changes to cs306_schema...: 
[2, 22:13:43] Apply changes to cs306_schema: Error 1064: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'Default Collation' at line 1
SQL Statement:
CREATE SCHEMA `cs306_schema` DEFAULT CHARACTER SET Default Collation 


[3, 22:24:40] Apply changes to cs_306: Applying object changes ...
[3, 22:24:43] Applying changes to cs_306...: 
[3, 22:24:43] : Changes applied to cs_306
[3, 22:24:45] Apply changes to cs_306: Changes applied
[4, 22:25:21] Apply changes to countries: Applying object changes ...
[4, 22:25:24] Applying changes to countries...: 
[4, 22:25:24] : Changes applied to countries
[4, 22:25:26] Apply changes to countries: Changes applied
[5, 22:25:58] SELECT * FROM cs_306.countries
LIMIT 0, 1000
: Running...
[5, 22:25:58] SELECT * FROM cs_306.countries
LIMIT 0, 1000
: Fetching...
[5, 22:25:58] SELECT * FROM cs_306.countries
LIMIT 0, 1000
: 0 row(s) returned
[1, 22:27:13] Apply changes to countries: Applying object changes ...
[1, 22:27:29] Applying changes to countries...: 
[1, 22:27:29] : Changes applied to countries
[1, 22:27:34] Apply changes to countries: Changes applied
[1, 18:50:32] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[1, 18:50:32] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[2, 18:50:32] SHOW DATABASES: Executing 
[2, 18:50:32] SHOW DATABASES: OK
[3, 18:52:46] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[3, 18:52:46] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[4, 18:52:46] SHOW DATABASES: Executing 
[4, 18:52:46] SHOW DATABASES: OK
[5, 18:53:15] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[5, 18:53:15] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[6, 18:53:15] SHOW TABLES FROM `` like 'expend': Executing 
[6, 18:53:15] SHOW TABLES FROM `` like 'expend': Error Code: 1102
Incorrect database name ''
[7, 19:07:28] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[7, 19:07:28] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[8, 19:07:28] SHOW DATABASES: Executing 
[8, 19:07:28] SHOW DATABASES: OK
[9, 19:16:15] Apply changes to CS306: Applying object changes ...
[9, 19:16:57] Applying changes to CS306...: 
[9, 19:16:57] : Changes applied to CS306
[9, 19:17:00] Apply changes to CS306: Changes applied
[10, 19:17:24] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[10, 19:17:24] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[11, 19:17:24] SHOW DATABASES: Executing 
[11, 19:17:24] SHOW DATABASES: OK
[12, 19:17:30] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[12, 19:17:30] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[13, 19:17:30] SHOW TABLES FROM `CS306` like 'expend': Executing 
[13, 19:17:30] SHOW TABLES FROM `CS306` like 'expend': OK
[14, 19:19:20]  CREATE TABLE `CS306`.`expend` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_funding` double): Executing 
[14, 19:19:20]  CREATE TABLE `CS306`.`expend` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_funding` double): OK
[15, 19:19:20] PREPARE stmt FROM 'INSERT INTO `CS306`.`expend` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_funding`) VALUES(?,?,?,?,?)': Executing 
[15, 19:19:20] PREPARE stmt FROM 'INSERT INTO `CS306`.`expend` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_funding`) VALUES(?,?,?,?,?)': OK
[16, 19:19:24] DEALLOCATE PREPARE stmt: Executing 
[16, 19:19:24] DEALLOCATE PREPARE stmt: OK
[17, 19:23:29] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[17, 19:23:29] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[18, 19:23:29] SHOW DATABASES: Executing 
[18, 19:23:29] SHOW DATABASES: OK
[19, 19:23:36] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[19, 19:23:36] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[20, 19:23:36] SHOW TABLES FROM `CS306` like 'woman': Executing 
[20, 19:23:36] SHOW TABLES FROM `CS306` like 'woman': OK
[21, 19:24:16]  CREATE TABLE `CS306`.`woman` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `woman_ratio` double): Executing 
[21, 19:24:16]  CREATE TABLE `CS306`.`woman` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `woman_ratio` double): OK
[22, 19:24:16] PREPARE stmt FROM 'INSERT INTO `CS306`.`woman` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`woman_ratio`) VALUES(?,?,?,?,?)': Executing 
[22, 19:24:16] PREPARE stmt FROM 'INSERT INTO `CS306`.`woman` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`woman_ratio`) VALUES(?,?,?,?,?)': OK
[23, 19:24:48] DEALLOCATE PREPARE stmt: Executing 
[23, 19:24:48] DEALLOCATE PREPARE stmt: OK
[24, 19:26:30] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[24, 19:26:30] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[25, 19:26:30] SHOW DATABASES: Executing 
[25, 19:26:30] SHOW DATABASES: OK
[26, 19:26:34] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[26, 19:26:34] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[27, 19:26:34] SHOW TABLES FROM `CS306` like 'knowledge': Executing 
[27, 19:26:34] SHOW TABLES FROM `CS306` like 'knowledge': OK
[28, 19:26:55]  CREATE TABLE `CS306`.`knowledge` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_knowledge_rate` double): Executing 
[28, 19:26:55]  CREATE TABLE `CS306`.`knowledge` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_knowledge_rate` double): OK
[29, 19:26:55] PREPARE stmt FROM 'INSERT INTO `CS306`.`knowledge` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_knowledge_rate`) VALUES(?,?,?,?,?)': Executing 
[29, 19:26:55] PREPARE stmt FROM 'INSERT INTO `CS306`.`knowledge` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_knowledge_rate`) VALUES(?,?,?,?,?)': OK
[30, 19:26:55] DEALLOCATE PREPARE stmt: Executing 
[30, 19:26:55] DEALLOCATE PREPARE stmt: OK
[31, 19:27:30] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[31, 19:27:30] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[32, 19:27:30] SHOW DATABASES: Executing 
[32, 19:27:30] SHOW DATABASES: OK
[33, 19:27:33] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[33, 19:27:33] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[34, 19:27:33] SHOW TABLES FROM `CS306` like 'annual': Executing 
[34, 19:27:33] SHOW TABLES FROM `CS306` like 'annual': OK
[35, 19:27:51]  CREATE TABLE `CS306`.`annual` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `death_num` int): Executing 
[35, 19:27:51]  CREATE TABLE `CS306`.`annual` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `death_num` int): OK
[36, 19:27:51] PREPARE stmt FROM 'INSERT INTO `CS306`.`annual` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`death_num`) VALUES(?,?,?,?,?)': Executing 
[36, 19:27:51] PREPARE stmt FROM 'INSERT INTO `CS306`.`annual` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`death_num`) VALUES(?,?,?,?,?)': OK
[37, 19:28:42] DEALLOCATE PREPARE stmt: Executing 
[37, 19:28:42] DEALLOCATE PREPARE stmt: OK
[1, 20:32:21] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[1, 20:32:21] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): 0 row(s) affected
[2, 20:32:21] CREATE TABLE HIV_cases ( dyear int NOT NULL,
woman_ratio REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[2, 20:32:21] CREATE TABLE HIV_cases ( dyear int NOT NULL,
woman_ratio REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[3, 20:32:21] CREATE TABLE HIV_funding ( dyear int NOT NULL,
total_funding REAL NOT NULL,
   
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[3, 20:32:22] CREATE TABLE HIV_funding ( dyear int NOT NULL,
total_funding REAL NOT NULL,
   
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[4, 20:32:22] CREATE TABLE HIV_education (
dyear int NOT NULL,
total_knowledge_rate REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[4, 20:32:22] CREATE TABLE HIV_education (
dyear int NOT NULL,
total_knowledge_rate REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[5, 20:32:22] CREATE TABLE HIV_death ( dyear int NOT NULL,
death_num REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[5, 20:32:22] CREATE TABLE HIV_death ( dyear int NOT NULL,
death_num REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[6, 21:42:12] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[6, 21:42:12] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1050. Table 'countries' already exists
[7, 21:42:28] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[7, 21:42:28] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1050. Table 'countries' already exists
[8, 21:42:52] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[8, 21:42:52] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1050. Table 'countries' already exists
[9, 21:43:05] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[9, 21:43:05] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1050. Table 'countries' already exists
[10, 21:43:24] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[10, 21:43:24] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1050. Table 'countries' already exists
[11, 21:43:34] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[11, 21:43:34] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1050. Table 'countries' already exists
[12, 21:44:39] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[12, 21:44:39] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1050. Table 'countries' already exists
[1, 22:22:16] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[1, 22:22:16] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1050. Table 'countries' already exists
[2, 22:23:07] DROP TABLE `CS306`.`annual`, `CS306`.`countries`, `CS306`.`expend`, `CS306`.`HIV_cases`, `CS306`.`HIV_death`, `CS306`.`HIV_education`, `CS306`.`HIV_funding`, `CS306`.`knowledge`, `CS306`.`woman`: Running...
[2, 22:23:07] DROP TABLE `CS306`.`annual`, `CS306`.`countries`, `CS306`.`expend`, `CS306`.`HIV_cases`, `CS306`.`HIV_death`, `CS306`.`HIV_education`, `CS306`.`HIV_funding`, `CS306`.`knowledge`, `CS306`.`woman`: 0 row(s) affected
[3, 22:24:04] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[3, 22:24:04] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[4, 22:24:04] SHOW DATABASES: Executing 
[4, 22:24:04] SHOW DATABASES: OK
[5, 22:24:06] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[5, 22:24:06] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[6, 22:24:06] SHOW TABLES FROM `CS306` like 'annual': Executing 
[6, 22:24:06] SHOW TABLES FROM `CS306` like 'annual': OK
[7, 22:24:27]  CREATE TABLE `CS306`.`annual` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `death_num` int): Executing 
[7, 22:24:27]  CREATE TABLE `CS306`.`annual` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `death_num` int): OK
[8, 22:24:27] PREPARE stmt FROM 'INSERT INTO `CS306`.`annual` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`death_num`) VALUES(?,?,?,?,?)': Executing 
[8, 22:24:27] PREPARE stmt FROM 'INSERT INTO `CS306`.`annual` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`death_num`) VALUES(?,?,?,?,?)': OK
[9, 22:25:17] DEALLOCATE PREPARE stmt: Executing 
[9, 22:25:17] DEALLOCATE PREPARE stmt: OK
[10, 22:25:43] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[10, 22:25:43] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[11, 22:25:43] SHOW DATABASES: Executing 
[11, 22:25:43] SHOW DATABASES: OK
[12, 22:25:45] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[12, 22:25:45] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[13, 22:25:45] SHOW TABLES FROM `CS306` like 'expend': Executing 
[13, 22:25:45] SHOW TABLES FROM `CS306` like 'expend': OK
[14, 22:25:55]  CREATE TABLE `CS306`.`expend` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_funding` double): Executing 
[14, 22:25:55]  CREATE TABLE `CS306`.`expend` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_funding` double): OK
[15, 22:25:55] PREPARE stmt FROM 'INSERT INTO `CS306`.`expend` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_funding`) VALUES(?,?,?,?,?)': Executing 
[15, 22:25:55] PREPARE stmt FROM 'INSERT INTO `CS306`.`expend` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_funding`) VALUES(?,?,?,?,?)': OK
[16, 22:25:59] DEALLOCATE PREPARE stmt: Executing 
[16, 22:25:59] DEALLOCATE PREPARE stmt: OK
[17, 22:26:14] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[17, 22:26:14] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[18, 22:26:14] SHOW DATABASES: Executing 
[18, 22:26:14] SHOW DATABASES: OK
[19, 22:26:16] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[19, 22:26:16] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[20, 22:26:16] SHOW TABLES FROM `CS306` like 'knowledge': Executing 
[20, 22:26:16] SHOW TABLES FROM `CS306` like 'knowledge': OK
[21, 22:26:27]  CREATE TABLE `CS306`.`knowledge` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_knowledge_rate` double): Executing 
[21, 22:26:27]  CREATE TABLE `CS306`.`knowledge` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_knowledge_rate` double): OK
[22, 22:26:27] PREPARE stmt FROM 'INSERT INTO `CS306`.`knowledge` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_knowledge_rate`) VALUES(?,?,?,?,?)': Executing 
[22, 22:26:27] PREPARE stmt FROM 'INSERT INTO `CS306`.`knowledge` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_knowledge_rate`) VALUES(?,?,?,?,?)': OK
[23, 22:26:27] DEALLOCATE PREPARE stmt: Executing 
[23, 22:26:27] DEALLOCATE PREPARE stmt: OK
[24, 22:26:44] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[24, 22:26:44] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[25, 22:26:44] SHOW DATABASES: Executing 
[25, 22:26:44] SHOW DATABASES: OK
[26, 22:26:45] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[26, 22:26:45] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[27, 22:26:45] SHOW TABLES FROM `CS306` like 'woman': Executing 
[27, 22:26:45] SHOW TABLES FROM `CS306` like 'woman': OK
[28, 22:26:54]  CREATE TABLE `CS306`.`woman` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `woman_ratio` double): Executing 
[28, 22:26:54]  CREATE TABLE `CS306`.`woman` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `woman_ratio` double): OK
[29, 22:26:54] PREPARE stmt FROM 'INSERT INTO `CS306`.`woman` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`woman_ratio`) VALUES(?,?,?,?,?)': Executing 
[29, 22:26:54] PREPARE stmt FROM 'INSERT INTO `CS306`.`woman` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`woman_ratio`) VALUES(?,?,?,?,?)': OK
[30, 22:27:22] DEALLOCATE PREPARE stmt: Executing 
[30, 22:27:22] DEALLOCATE PREPARE stmt: OK
[31, 22:28:22] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[31, 22:28:22] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): 0 row(s) affected
[32, 22:28:22] CREATE TABLE HIV_cases ( dyear int NOT NULL,
woman_ratio REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[32, 22:28:22] CREATE TABLE HIV_cases ( dyear int NOT NULL,
woman_ratio REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[33, 22:28:22] CREATE TABLE HIV_funding ( dyear int NOT NULL,
total_funding REAL NOT NULL,
   
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[33, 22:28:22] CREATE TABLE HIV_funding ( dyear int NOT NULL,
total_funding REAL NOT NULL,
   
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[34, 22:28:22] CREATE TABLE HIV_education (
dyear int NOT NULL,
total_knowledge_rate REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[34, 22:28:22] CREATE TABLE HIV_education (
dyear int NOT NULL,
total_knowledge_rate REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[35, 22:28:22] CREATE TABLE HIV_death ( dyear int NOT NULL,
death_num REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[35, 22:28:22] CREATE TABLE HIV_death ( dyear int NOT NULL,
death_num REAL NOT NULL,
ISOYEAR VARCHAR(50) NOT NULL,
PRIMARY KEY (dyear, ISOYEAR),
FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[36, 22:29:51] SET FOREIGN_KEY_CHECKS = 0: Running...
[36, 22:29:51] SET FOREIGN_KEY_CHECKS = 0: 0 row(s) affected
[37, 22:29:51] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: Running...
[37, 22:29:51] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: Error Code: 1049. Unknown database '306_step2'
[38, 22:31:40] DROP DATABASE `CS306`: Running...
[38, 22:31:40] DROP DATABASE `CS306`: 9 row(s) affected
[1, 22:32:42] Apply changes to 306_step2: Applying object changes ...
[1, 22:32:46] Applying changes to 306_step2...: 
[1, 22:32:46] : Changes applied to 306_step2
[1, 22:32:47] Apply changes to 306_step2: Changes applied
[2, 22:33:17] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[2, 22:33:17] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[3, 22:33:33] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[3, 22:33:33] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[4, 22:33:52] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[4, 22:33:52] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[5, 22:34:01] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[5, 22:34:01] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[6, 22:34:01] SHOW DATABASES: Executing 
[6, 22:34:01] SHOW DATABASES: OK
[7, 22:34:02] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[7, 22:34:02] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[8, 22:34:02] SHOW TABLES FROM `306_step2` like 'woman': Executing 
[8, 22:34:02] SHOW TABLES FROM `306_step2` like 'woman': OK
[9, 22:34:10]  CREATE TABLE `306_step2`.`woman` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `woman_ratio` double): Executing 
[9, 22:34:10]  CREATE TABLE `306_step2`.`woman` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `woman_ratio` double): OK
[10, 22:34:10] PREPARE stmt FROM 'INSERT INTO `306_step2`.`woman` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`woman_ratio`) VALUES(?,?,?,?,?)': Executing 
[10, 22:34:11] PREPARE stmt FROM 'INSERT INTO `306_step2`.`woman` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`woman_ratio`) VALUES(?,?,?,?,?)': OK
[11, 22:34:43] DEALLOCATE PREPARE stmt: Executing 
[11, 22:34:43] DEALLOCATE PREPARE stmt: OK
[12, 22:34:57] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[12, 22:34:57] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[13, 22:34:57] SHOW DATABASES: Executing 
[13, 22:34:57] SHOW DATABASES: OK
[14, 22:34:59] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[14, 22:34:59] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[15, 22:34:59] SHOW TABLES FROM `306_step2` like 'knowledge': Executing 
[15, 22:34:59] SHOW TABLES FROM `306_step2` like 'knowledge': OK
[16, 22:35:08]  CREATE TABLE `306_step2`.`knowledge` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_knowledge_rate` double): Executing 
[16, 22:35:08]  CREATE TABLE `306_step2`.`knowledge` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_knowledge_rate` double): OK
[17, 22:35:08] PREPARE stmt FROM 'INSERT INTO `306_step2`.`knowledge` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_knowledge_rate`) VALUES(?,?,?,?,?)': Executing 
[17, 22:35:08] PREPARE stmt FROM 'INSERT INTO `306_step2`.`knowledge` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_knowledge_rate`) VALUES(?,?,?,?,?)': OK
[18, 22:35:08] DEALLOCATE PREPARE stmt: Executing 
[18, 22:35:08] DEALLOCATE PREPARE stmt: OK
[19, 22:35:20] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[19, 22:35:20] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[20, 22:35:20] SHOW DATABASES: Executing 
[20, 22:35:20] SHOW DATABASES: OK
[21, 22:35:22] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[21, 22:35:22] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[22, 22:35:22] SHOW TABLES FROM `306_step2` like 'expend': Executing 
[22, 22:35:22] SHOW TABLES FROM `306_step2` like 'expend': OK
[23, 22:35:31]  CREATE TABLE `306_step2`.`expend` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_funding` double): Executing 
[23, 22:35:31]  CREATE TABLE `306_step2`.`expend` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_funding` double): OK
[24, 22:35:31] PREPARE stmt FROM 'INSERT INTO `306_step2`.`expend` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_funding`) VALUES(?,?,?,?,?)': Executing 
[24, 22:35:31] PREPARE stmt FROM 'INSERT INTO `306_step2`.`expend` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_funding`) VALUES(?,?,?,?,?)': OK
[25, 22:35:35] DEALLOCATE PREPARE stmt: Executing 
[25, 22:35:35] DEALLOCATE PREPARE stmt: OK
[26, 22:35:50] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[26, 22:35:50] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[27, 22:35:50] SHOW DATABASES: Executing 
[27, 22:35:50] SHOW DATABASES: OK
[28, 22:35:51] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[28, 22:35:51] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[29, 22:35:51] SHOW TABLES FROM `306_step2` like 'annual': Executing 
[29, 22:35:51] SHOW TABLES FROM `306_step2` like 'annual': OK
[30, 22:35:59]  CREATE TABLE `306_step2`.`annual` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `death_num` int): Executing 
[30, 22:35:59]  CREATE TABLE `306_step2`.`annual` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `death_num` int): OK
[31, 22:35:59] PREPARE stmt FROM 'INSERT INTO `306_step2`.`annual` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`death_num`) VALUES(?,?,?,?,?)': Executing 
[31, 22:35:59] PREPARE stmt FROM 'INSERT INTO `306_step2`.`annual` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`death_num`) VALUES(?,?,?,?,?)': OK
[32, 22:36:48] DEALLOCATE PREPARE stmt: Executing 
[32, 22:36:48] DEALLOCATE PREPARE stmt: OK
[33, 22:37:09] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Running...
[33, 22:37:09] CREATE TABLE countries (
ISOYEAR VARCHAR(50) NOT NULL, country_name VARCHAR(50) NOT NULL, PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[34, 22:38:41] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Running...
[34, 22:38:41] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[35, 22:38:50] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Running...
[35, 22:38:50] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[36, 22:40:06] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Running...
[36, 22:40:06] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[37, 22:41:36] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Running...
[37, 22:41:36] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[38, 22:41:46] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Running...
[38, 22:41:46] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Error Code: 1046. No database selected
Select the default DB to be used by double-clicking its name in the SCHEMAS list in the sidebar.
[39, 22:41:53] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Running...
[39, 22:41:53] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): 0 row(s) affected
[40, 22:41:53] CREATE TABLE HIV_cases (
   dyear int NOT NULL,
  woman_ratio FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE


): Running...
[40, 22:41:53] CREATE TABLE HIV_cases (
   dyear int NOT NULL,
  woman_ratio FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE


): 0 row(s) affected
[41, 22:41:53] CREATE TABLE HIV_funding (
dyear int NOT NULL,
  total_funding FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[41, 22:41:53] CREATE TABLE HIV_funding (
dyear int NOT NULL,
  total_funding FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[42, 22:41:53] CREATE TABLE HIV_education (
  dyear int NOT NULL,
  total_knowledge_rate FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[42, 22:41:53] CREATE TABLE HIV_education (
  dyear int NOT NULL,
  total_knowledge_rate FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[43, 22:41:53] CREATE TABLE HIV_death (
dyear int NOT NULL,
  death_num FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[43, 22:41:53] CREATE TABLE HIV_death (
dyear int NOT NULL,
  death_num FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[44, 22:42:30] SET FOREIGN_KEY_CHECKS = 0: Running...
[44, 22:42:30] SET FOREIGN_KEY_CHECKS = 0: 0 row(s) affected
[45, 22:42:30] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: Running...
[45, 22:42:30] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: Fetching...
[45, 22:42:30] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: 1000 row(s) returned
[46, 22:42:30] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: Running...
[46, 22:42:30] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: Fetching...
[46, 22:42:30] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: 948 row(s) returned
[47, 22:42:30] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: Running...
[47, 22:42:30] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: Fetching...
[47, 22:42:30] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: 1000 row(s) returned
[48, 22:42:30] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: Running...
[48, 22:42:30] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: Fetching...
[48, 22:42:30] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: 79 row(s) returned
[49, 22:42:30] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: Running...
[49, 22:42:30] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: Fetching...
[49, 22:42:30] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: 0 row(s) returned
[50, 22:42:30] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: Running...
[50, 22:42:30] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: Fetching...
[50, 22:42:30] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: 0 row(s) returned
[51, 22:42:30] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: Running...
[51, 22:42:30] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: Fetching...
[51, 22:42:30] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: 0 row(s) returned
[52, 22:42:30] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: Running...
[52, 22:42:30] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: Fetching...
[52, 22:42:30] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: 0 row(s) returned
[53, 22:42:30] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: Running...
[53, 22:42:30] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: Fetching...
[53, 22:42:30] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: 0 row(s) returned
[54, 22:42:30] INSERT INTO countries (country_name, ISOYEAR )
SELECT country_name, ISOYEAR
FROM annual: Running...
[54, 22:42:30] INSERT INTO countries (country_name, ISOYEAR )
SELECT country_name, ISOYEAR
FROM annual: 6150 row(s) affected
Records: 6150  Duplicates: 0  Warnings: 0
[55, 22:42:30] INSERT INTO HIV_education (dyear, total_knowledge_rate, ISOYEAR )
SELECT dyear, total_knowledge_rate, ISOYEAR 
FROM knowledge: Running...
[55, 22:42:30] INSERT INTO HIV_education (dyear, total_knowledge_rate, ISOYEAR )
SELECT dyear, total_knowledge_rate, ISOYEAR 
FROM knowledge: 79 row(s) affected
Records: 79  Duplicates: 0  Warnings: 0
[56, 22:42:30] INSERT INTO HIV_death (dyear, death_num, ISOYEAR )
SELECT dyear, death_num, ISOYEAR
FROM annual: Running...
[56, 22:42:30] INSERT INTO HIV_death (dyear, death_num, ISOYEAR )
SELECT dyear, death_num, ISOYEAR
FROM annual: 6150 row(s) affected
Records: 6150  Duplicates: 0  Warnings: 0
[57, 22:42:30] INSERT INTO HIV_funding (dyear, total_funding, ISOYEAR )
SELECT dyear, total_funding, ISOYEAR
FROM expend: Running...
[57, 22:42:30] INSERT INTO HIV_funding (dyear, total_funding, ISOYEAR )
SELECT dyear, total_funding, ISOYEAR
FROM expend: 948 row(s) affected
Records: 948  Duplicates: 0  Warnings: 0
[58, 22:42:30] INSERT INTO HIV_cases (dyear,woman_ratio, ISOYEAR )
SELECT dyear,woman_ratio, ISOYEAR 
FROM woman: Running...
[58, 22:42:30] INSERT INTO HIV_cases (dyear,woman_ratio, ISOYEAR )
SELECT dyear,woman_ratio, ISOYEAR 
FROM woman: 4130 row(s) affected
Records: 4130  Duplicates: 0  Warnings: 0
[59, 22:42:30] SET FOREIGN_KEY_CHECKS = 1: Running...
[59, 22:42:30] SET FOREIGN_KEY_CHECKS = 1: 0 row(s) affected
[60, 22:45:44] DROP DATABASE `306_step2`: Running...
[60, 22:45:44] DROP DATABASE `306_step2`: 9 row(s) affected
[61, 22:46:02] Apply changes to 306_step2: Applying object changes ...
[61, 22:46:04] Applying changes to 306_step2...: 
[61, 22:46:04] : Changes applied to 306_step2
[61, 22:46:06] Apply changes to 306_step2: Changes applied
[62, 22:46:34] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[62, 22:46:34] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[63, 22:46:34] SHOW DATABASES: Executing 
[63, 22:46:34] SHOW DATABASES: OK
[64, 22:46:35] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[64, 22:46:35] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[65, 22:46:35] SHOW TABLES FROM `306_step2` like 'annual': Executing 
[65, 22:46:35] SHOW TABLES FROM `306_step2` like 'annual': OK
[66, 22:46:43]  CREATE TABLE `306_step2`.`annual` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `death_num` int): Executing 
[66, 22:46:43]  CREATE TABLE `306_step2`.`annual` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `death_num` int): OK
[67, 22:46:43] PREPARE stmt FROM 'INSERT INTO `306_step2`.`annual` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`death_num`) VALUES(?,?,?,?,?)': Executing 
[67, 22:46:43] PREPARE stmt FROM 'INSERT INTO `306_step2`.`annual` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`death_num`) VALUES(?,?,?,?,?)': OK
[68, 22:47:32] DEALLOCATE PREPARE stmt: Executing 
[68, 22:47:32] DEALLOCATE PREPARE stmt: OK
[69, 22:47:57] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[69, 22:47:57] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[70, 22:47:57] SHOW DATABASES: Executing 
[70, 22:47:57] SHOW DATABASES: OK
[71, 22:47:58] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[71, 22:47:58] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[72, 22:47:58] SHOW TABLES FROM `306_step2` like 'expend': Executing 
[72, 22:47:58] SHOW TABLES FROM `306_step2` like 'expend': OK
[73, 22:48:06]  CREATE TABLE `306_step2`.`expend` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_funding` double): Executing 
[73, 22:48:06]  CREATE TABLE `306_step2`.`expend` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_funding` double): OK
[74, 22:48:06] PREPARE stmt FROM 'INSERT INTO `306_step2`.`expend` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_funding`) VALUES(?,?,?,?,?)': Executing 
[74, 22:48:06] PREPARE stmt FROM 'INSERT INTO `306_step2`.`expend` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_funding`) VALUES(?,?,?,?,?)': OK
[75, 22:48:10] DEALLOCATE PREPARE stmt: Executing 
[75, 22:48:10] DEALLOCATE PREPARE stmt: OK
[76, 22:48:21] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[76, 22:48:21] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[77, 22:48:21] SHOW DATABASES: Executing 
[77, 22:48:21] SHOW DATABASES: OK
[78, 22:48:23] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[78, 22:48:23] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[79, 22:48:23] SHOW TABLES FROM `306_step2` like 'knowledge': Executing 
[79, 22:48:23] SHOW TABLES FROM `306_step2` like 'knowledge': OK
[80, 22:48:31]  CREATE TABLE `306_step2`.`knowledge` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_knowledge_rate` double): Executing 
[80, 22:48:31]  CREATE TABLE `306_step2`.`knowledge` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `total_knowledge_rate` double): OK
[81, 22:48:31] PREPARE stmt FROM 'INSERT INTO `306_step2`.`knowledge` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_knowledge_rate`) VALUES(?,?,?,?,?)': Executing 
[81, 22:48:31] PREPARE stmt FROM 'INSERT INTO `306_step2`.`knowledge` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`total_knowledge_rate`) VALUES(?,?,?,?,?)': OK
[82, 22:48:31] DEALLOCATE PREPARE stmt: Executing 
[82, 22:48:31] DEALLOCATE PREPARE stmt: OK
[83, 22:48:44] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[83, 22:48:44] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[84, 22:48:44] SHOW DATABASES: Executing 
[84, 22:48:44] SHOW DATABASES: OK
[85, 22:48:45] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': Executing 
[85, 22:48:45] SHOW SESSION VARIABLES LIKE 'lower_case_table_names': OK
[86, 22:48:45] SHOW TABLES FROM `306_step2` like 'woman': Executing 
[86, 22:48:45] SHOW TABLES FROM `306_step2` like 'woman': OK
[87, 22:48:54]  CREATE TABLE `306_step2`.`woman` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `woman_ratio` double): Executing 
[87, 22:48:54]  CREATE TABLE `306_step2`.`woman` (`ISOYEAR` text, `country_name` text, `ISO_code` text, `dyear` int, `woman_ratio` double): OK
[88, 22:48:54] PREPARE stmt FROM 'INSERT INTO `306_step2`.`woman` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`woman_ratio`) VALUES(?,?,?,?,?)': Executing 
[88, 22:48:54] PREPARE stmt FROM 'INSERT INTO `306_step2`.`woman` (`ISOYEAR`,`country_name`,`ISO_code`,`dyear`,`woman_ratio`) VALUES(?,?,?,?,?)': OK
[89, 22:49:26] DEALLOCATE PREPARE stmt: Executing 
[89, 22:49:26] DEALLOCATE PREPARE stmt: OK
[1, 22:49:57] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): Running...
[1, 22:49:57] CREATE TABLE countries (
  ISOYEAR VARCHAR(50) NOT NULL,
  country_name VARCHAR(50) NOT NULL,
  PRIMARY KEY (ISOYEAR)
): 0 row(s) affected
[2, 22:49:57] CREATE TABLE HIV_cases (
   dyear int NOT NULL,
  woman_ratio FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE


): Running...
[2, 22:49:57] CREATE TABLE HIV_cases (
   dyear int NOT NULL,
  woman_ratio FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE


): 0 row(s) affected
[3, 22:49:57] CREATE TABLE HIV_funding (
dyear int NOT NULL,
  total_funding FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[3, 22:49:57] CREATE TABLE HIV_funding (
dyear int NOT NULL,
  total_funding FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[4, 22:49:57] CREATE TABLE HIV_education (
  dyear int NOT NULL,
  total_knowledge_rate FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[4, 22:49:57] CREATE TABLE HIV_education (
  dyear int NOT NULL,
  total_knowledge_rate FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[5, 22:49:57] CREATE TABLE HIV_death (
dyear int NOT NULL,
  death_num FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): Running...
[5, 22:49:57] CREATE TABLE HIV_death (
dyear int NOT NULL,
  death_num FLOAT NOT NULL,
  ISOYEAR VARCHAR(50) NOT NULL,
  PRIMARY KEY (dyear, ISOYEAR),
  FOREIGN KEY (ISOYEAR) REFERENCES countries(ISOYEAR) ON DELETE CASCADE
): 0 row(s) affected
[6, 22:50:21] SET FOREIGN_KEY_CHECKS = 0: Running...
[6, 22:50:21] SET FOREIGN_KEY_CHECKS = 0: 0 row(s) affected
[7, 22:50:21] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: Running...
[7, 22:50:21] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: Fetching...
[7, 22:50:21] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: 1000 row(s) returned
[8, 22:50:21] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: Running...
[8, 22:50:21] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: Fetching...
[8, 22:50:21] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: 948 row(s) returned
[9, 22:50:21] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: Running...
[9, 22:50:21] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: Fetching...
[9, 22:50:21] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: 1000 row(s) returned
[10, 22:50:21] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: Running...
[10, 22:50:21] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: Fetching...
[10, 22:50:21] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: 79 row(s) returned
[11, 22:50:21] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: Running...
[11, 22:50:21] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: Fetching...
[11, 22:50:21] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: 0 row(s) returned
[12, 22:50:21] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: Running...
[12, 22:50:21] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: Fetching...
[12, 22:50:21] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: 0 row(s) returned
[13, 22:50:21] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: Running...
[13, 22:50:21] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: Fetching...
[13, 22:50:21] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: 0 row(s) returned
[14, 22:50:21] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: Running...
[14, 22:50:21] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: Fetching...
[14, 22:50:22] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: 0 row(s) returned
[15, 22:50:22] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: Running...
[15, 22:50:22] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: Fetching...
[15, 22:50:22] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: 0 row(s) returned
[16, 22:50:22] INSERT INTO countries (country_name, ISOYEAR )
SELECT country_name, ISOYEAR
FROM annual: Running...
[16, 22:50:22] INSERT INTO countries (country_name, ISOYEAR )
SELECT country_name, ISOYEAR
FROM annual: 6150 row(s) affected
Records: 6150  Duplicates: 0  Warnings: 0
[17, 22:50:22] INSERT INTO HIV_education (dyear, total_knowledge_rate, ISOYEAR )
SELECT dyear, total_knowledge_rate, ISOYEAR 
FROM knowledge: Running...
[17, 22:50:22] INSERT INTO HIV_education (dyear, total_knowledge_rate, ISOYEAR )
SELECT dyear, total_knowledge_rate, ISOYEAR 
FROM knowledge: 79 row(s) affected
Records: 79  Duplicates: 0  Warnings: 0
[18, 22:50:22] INSERT INTO HIV_death (dyear, death_num, ISOYEAR )
SELECT dyear, death_num, ISOYEAR
FROM annual: Running...
[18, 22:50:22] INSERT INTO HIV_death (dyear, death_num, ISOYEAR )
SELECT dyear, death_num, ISOYEAR
FROM annual: 6150 row(s) affected
Records: 6150  Duplicates: 0  Warnings: 0
[19, 22:50:22] INSERT INTO HIV_funding (dyear, total_funding, ISOYEAR )
SELECT dyear, total_funding, ISOYEAR
FROM expend: Running...
[19, 22:50:22] INSERT INTO HIV_funding (dyear, total_funding, ISOYEAR )
SELECT dyear, total_funding, ISOYEAR
FROM expend: 948 row(s) affected
Records: 948  Duplicates: 0  Warnings: 0
[20, 22:50:22] INSERT INTO HIV_cases (dyear,woman_ratio, ISOYEAR )
SELECT dyear,woman_ratio, ISOYEAR 
FROM woman: Running...
[20, 22:50:22] INSERT INTO HIV_cases (dyear,woman_ratio, ISOYEAR )
SELECT dyear,woman_ratio, ISOYEAR 
FROM woman: 4130 row(s) affected
Records: 4130  Duplicates: 0  Warnings: 0
[21, 22:50:22] SET FOREIGN_KEY_CHECKS = 1: Running...
[21, 22:50:22] SET FOREIGN_KEY_CHECKS = 1: 0 row(s) affected
[22, 22:51:56] SET FOREIGN_KEY_CHECKS = 0: Running...
[22, 22:51:56] SET FOREIGN_KEY_CHECKS = 0: 0 row(s) affected
[23, 22:51:56] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: Running...
[23, 22:51:56] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: Fetching...
[23, 22:51:56] SELECT * FROM 306_step2.annual
LIMIT 0, 1000
: 1000 row(s) returned
[24, 22:51:56] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: Running...
[24, 22:51:56] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: Fetching...
[24, 22:51:56] SELECT * FROM 306_step2.expend
LIMIT 0, 1000
: 948 row(s) returned
[25, 22:51:56] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: Running...
[25, 22:51:56] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: Fetching...
[25, 22:51:56] SELECT * FROM 306_step2.woman
LIMIT 0, 1000
: 1000 row(s) returned
[26, 22:51:56] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: Running...
[26, 22:51:56] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: Fetching...
[26, 22:51:56] SELECT * FROM 306_step2.knowledge
LIMIT 0, 1000
: 79 row(s) returned
[27, 22:51:56] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: Running...
[27, 22:51:56] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: Fetching...
[27, 22:51:56] SELECT * FROM 306_step2.countries
LIMIT 0, 1000
: 1000 row(s) returned
[28, 22:51:56] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: Running...
[28, 22:51:56] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: Fetching...
[28, 22:51:56] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 1000
: 1000 row(s) returned
[29, 22:51:56] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: Running...
[29, 22:51:56] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: Fetching...
[29, 22:51:56] SELECT * FROM 306_step2.HIV_education
LIMIT 0, 1000
: 79 row(s) returned
[30, 22:51:56] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: Running...
[30, 22:51:56] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: Fetching...
[30, 22:51:56] SELECT * FROM 306_step2.HIV_cases
LIMIT 0, 1000
: 1000 row(s) returned
[31, 22:51:56] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: Running...
[31, 22:51:56] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: Fetching...
[31, 22:51:56] SELECT * FROM 306_step2.HIV_funding
LIMIT 0, 1000
: 948 row(s) returned
[32, 22:51:56] INSERT INTO countries (country_name, ISOYEAR )
SELECT country_name, ISOYEAR
FROM annual: Running...
[32, 22:51:56] INSERT INTO countries (country_name, ISOYEAR )
SELECT country_name, ISOYEAR
FROM annual: Error Code: 1062. Duplicate entry 'AFG2007' for key 'countries.PRIMARY'
[33, 23:39:21] CREATE VIEW highDeath(ISOYEAR, death_num)
AS SELECT hiv_death.ISOYEAR, hiv_death.death_num
FROM  hiv_death 
WHERE hiv_deathh.death_num > 12000: Running...
[33, 23:39:22] CREATE VIEW highDeath(ISOYEAR, death_num)
AS SELECT hiv_death.ISOYEAR, hiv_death.death_num
FROM  hiv_death 
WHERE hiv_deathh.death_num > 12000: Error Code: 1054. Unknown column 'hiv_deathh.death_num' in 'where clause'
[34, 23:54:31] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 1000
: Running...
[34, 23:54:31] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 1000
: Fetching...
[34, 23:54:31] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 1000
: 1000 row(s) returned
[35, 23:54:31] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: Running...
[35, 23:54:31] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: 0 row(s) affected
[36, 23:54:31] DROP VIEW highDeath: Running...
[36, 23:54:31] DROP VIEW highDeath: 0 row(s) affected
[37, 23:57:16] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 1000
: Running...
[37, 23:57:16] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 1000
: Fetching...
[37, 23:57:16] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 1000
: 1000 row(s) returned
[38, 23:57:16] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: Running...
[38, 23:57:16] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: 0 row(s) affected
[39, 23:57:16] DROP VIEW highDeath: Running...
[39, 23:57:16] DROP VIEW highDeath: 0 row(s) affected
[40, 00:07:07] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 1000
: Running...
[40, 00:07:07] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 1000
: Fetching...
[40, 00:07:07] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 1000
: 1000 row(s) returned
[41, 00:07:07] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: Running...
[41, 00:07:07] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: 0 row(s) affected
[42, 00:07:07] DROP VIEW highEducation: Running...
[42, 00:07:07] DROP VIEW highEducation: 0 row(s) affected
[43, 00:08:45] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 1000
: Running...
[43, 00:08:45] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 1000
: Fetching...
[43, 00:08:45] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 1000
: 1000 row(s) returned
[44, 00:08:45] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: Running...
[44, 00:08:45] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: 0 row(s) affected
[45, 00:08:45] DROP VIEW highEducation: Running...
[45, 00:08:45] DROP VIEW highEducation: 0 row(s) affected
[46, 00:08:59] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Running...
[46, 00:08:59] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Fetching...
[46, 00:08:59] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: 50000 row(s) returned
[47, 00:08:59] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: Running...
[47, 00:08:59] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: 0 row(s) affected
[48, 00:08:59] DROP VIEW highEducation: Running...
[48, 00:08:59] DROP VIEW highEducation: 0 row(s) affected
[49, 00:09:50] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 60
LIMIT 0, 50000
: Running...
[49, 00:09:50] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 60
LIMIT 0, 50000
: Fetching...
[49, 00:09:50] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 60
LIMIT 0, 50000
: 36900 row(s) returned
[50, 00:09:50] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 60: Running...
[50, 00:09:50] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 60: 0 row(s) affected
[51, 00:09:50] DROP VIEW highEducation: Running...
[51, 00:09:50] DROP VIEW highEducation: 0 row(s) affected
[52, 00:10:18] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 99
LIMIT 0, 50000
: Running...
[52, 00:10:18] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 99
LIMIT 0, 50000
: Fetching...
[52, 00:10:18] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 99
LIMIT 0, 50000
: 0 row(s) returned
[53, 00:10:18] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 99: Running...
[53, 00:10:18] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 99: 0 row(s) affected
[54, 00:10:18] DROP VIEW highEducation: Running...
[54, 00:10:18] DROP VIEW highEducation: 0 row(s) affected
[55, 00:10:28] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 80
LIMIT 0, 50000
: Running...
[55, 00:10:28] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 80
LIMIT 0, 50000
: Fetching...
[55, 00:10:28] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 80
LIMIT 0, 50000
: 6150 row(s) returned
[56, 00:10:28] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 80: Running...
[56, 00:10:28] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 80: 0 row(s) affected
[57, 00:10:28] DROP VIEW highEducation: Running...
[57, 00:10:28] DROP VIEW highEducation: 0 row(s) affected
[58, 00:10:45] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 65
LIMIT 0, 50000
: Running...
[58, 00:10:45] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 65
LIMIT 0, 50000
: Fetching...
[58, 00:10:45] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate > 65
LIMIT 0, 50000
: 30750 row(s) returned
[59, 00:10:45] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 65: Running...
[59, 00:10:45] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 65: 0 row(s) affected
[60, 00:10:45] DROP VIEW highEducation: Running...
[60, 00:10:45] DROP VIEW highEducation: 0 row(s) affected
[61, 00:11:17] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate < 65
LIMIT 0, 50000
: Running...
[61, 00:11:17] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate < 65
LIMIT 0, 50000
: Fetching...
[61, 00:11:17] SELECT C.ISOYEAR, E.total_knowledge_rate
FROM countries C, HIV_education E
WHERE E.total_knowledge_rate < 65
LIMIT 0, 50000
: 50000 row(s) returned
[62, 00:11:17] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 65: Running...
[62, 00:11:17] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 65: 0 row(s) affected
[63, 00:11:17] DROP VIEW highEducation: Running...
[63, 00:11:17] DROP VIEW highEducation: 0 row(s) affected
[64, 00:15:14] SELECT HIV_education.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000
LIMIT 0, 50000
: Running...
[64, 00:15:14] SELECT HIV_education.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'HIV_education.ISOYEAR' in 'field list'
[65, 00:15:17] SELECT HIV_education.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000
LIMIT 0, 50000
: Running...
[65, 00:15:17] SELECT HIV_education.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'HIV_education.ISOYEAR' in 'field list'
[66, 00:16:18] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000
LIMIT 0, 50000
: Running...
[66, 00:16:18] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000
LIMIT 0, 50000
: Fetching...
[66, 00:16:18] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000
LIMIT 0, 50000
: 0 row(s) returned
[67, 00:16:18] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000: Running...
[67, 00:16:18] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 12000: 0 row(s) affected
[68, 00:16:18] DROP VIEW highEducation: Running...
[68, 00:16:18] DROP VIEW highEducation: 0 row(s) affected
[69, 00:16:34] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 65
LIMIT 0, 50000
: Running...
[69, 00:16:34] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 65
LIMIT 0, 50000
: Fetching...
[69, 00:16:34] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 65
LIMIT 0, 50000
: 5 row(s) returned
[70, 00:16:34] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 65: Running...
[70, 00:16:34] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 65: 0 row(s) affected
[71, 00:16:34] DROP VIEW highEducation: Running...
[71, 00:16:34] DROP VIEW highEducation: 0 row(s) affected
[72, 00:16:45] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Running...
[72, 00:16:45] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Fetching...
[72, 00:16:45] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: 33 row(s) returned
[73, 00:16:45] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: Running...
[73, 00:16:45] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: 0 row(s) affected
[74, 00:16:45] DROP VIEW highEducation: Running...
[74, 00:16:45] DROP VIEW highEducation: 0 row(s) affected
[75, 00:17:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Running...
[75, 00:17:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Fetching...
[75, 00:17:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: 46 row(s) returned
[76, 00:17:11] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: Running...
[76, 00:17:11] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: 0 row(s) affected
[77, 00:17:11] DROP VIEW highEducation: Running...
[77, 00:17:11] DROP VIEW highEducation: 0 row(s) affected
[78, 00:19:09] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Running...
[78, 00:19:09] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Fetching...
[78, 00:19:09] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: 195 row(s) returned
[79, 00:19:09] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: Running...
[79, 00:19:09] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: 0 row(s) affected
[80, 00:19:09] DROP VIEW highFunding: Running...
[80, 00:19:09] DROP VIEW highFunding: 0 row(s) affected
[81, 00:20:00] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Running...
[81, 00:20:00] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Fetching...
[81, 00:20:00] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: 753 row(s) returned
[82, 00:20:00] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: Running...
[82, 00:20:00] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: 0 row(s) affected
[83, 00:20:00] DROP VIEW highFunding: Running...
[83, 00:20:00] DROP VIEW highFunding: 0 row(s) affected
[84, 00:23:38] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 40
LIMIT 0, 50000
: Running...
[84, 00:23:38] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 40
LIMIT 0, 50000
: Fetching...
[84, 00:23:38] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 40
LIMIT 0, 50000
: 2279 row(s) returned
[85, 00:23:38] CREATE VIEW highWomanDeath (ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.highWomanDeath > 40: Running...
[85, 00:23:38] CREATE VIEW highWomanDeath (ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.highWomanDeath > 40: Error Code: 1054. Unknown column 'D.highWomanDeath' in 'where clause'
[86, 00:25:30] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 40
LIMIT 0, 50000
: Running...
[86, 00:25:30] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 40
LIMIT 0, 50000
: Fetching...
[86, 00:25:30] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 40
LIMIT 0, 50000
: 2279 row(s) returned
[87, 00:25:30] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 40: Running...
[87, 00:25:30] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 40: 0 row(s) affected
[88, 00:25:30] DROP VIEW highWomanDeath: Running...
[88, 00:25:30] DROP VIEW highWomanDeath: 0 row(s) affected
[89, 00:25:53] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Running...
[89, 00:25:53] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Fetching...
[89, 00:25:53] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: 1146 row(s) returned
[90, 00:25:53] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: Running...
[90, 00:25:53] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: 0 row(s) affected
[91, 00:25:53] DROP VIEW highWomanDeath: Running...
[91, 00:25:53] DROP VIEW highWomanDeath: 0 row(s) affected
[92, 00:26:25] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Running...
[92, 00:26:25] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Fetching...
[92, 00:26:25] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: 1146 row(s) returned
[93, 00:26:25] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: Running...
[93, 00:26:25] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: 0 row(s) affected
[94, 00:26:25] DROP VIEW highWomanDeath: Running...
[94, 00:26:25] DROP VIEW highWomanDeath: 0 row(s) affected
[95, 00:26:25] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Running...
[95, 00:26:25] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Fetching...
[95, 00:26:25] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: 2977 row(s) returned
[96, 00:26:25] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: Running...
[96, 00:26:25] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: 0 row(s) affected
[97, 00:26:25] DROP VIEW highWomanDeath: Running...
[97, 00:26:25] DROP VIEW highWomanDeath: 0 row(s) affected
[98, 00:26:56] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Running...
[98, 00:26:56] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Fetching...
[98, 00:26:56] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: 1146 row(s) returned
[99, 00:26:56] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: Running...
[99, 00:26:56] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: 0 row(s) affected
[100, 00:26:56] DROP VIEW highWomanDeath: Running...
[100, 00:26:56] DROP VIEW highWomanDeath: 0 row(s) affected
[101, 00:26:56] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Running...
[101, 00:26:56] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Fetching...
[101, 00:26:56] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: 2977 row(s) returned
[102, 00:26:56] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: Running...
[102, 00:26:56] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: 0 row(s) affected
[103, 00:26:56] DROP VIEW lowWomanDeath: Running...
[103, 00:26:56] DROP VIEW lowWomanDeath: 0 row(s) affected
[104, 00:27:15] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Running...
[104, 00:27:15] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Fetching...
[104, 00:27:15] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: 1146 row(s) returned
[105, 00:27:15] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: Running...
[105, 00:27:15] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: 0 row(s) affected
[106, 00:27:15] DROP VIEW highWomanDeath: Running...
[106, 00:27:15] DROP VIEW highWomanDeath: 0 row(s) affected
[107, 00:27:15] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Running...
[107, 00:27:15] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Fetching...
[107, 00:27:15] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: 2977 row(s) returned
[108, 00:27:15] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: Running...
[108, 00:27:15] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: 0 row(s) affected
[109, 00:27:15] DROP VIEW lowWomanDeath: Running...
[109, 00:27:15] DROP VIEW lowWomanDeath: 0 row(s) affected
[110, 00:29:49] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: Running...
[110, 00:29:49] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: Fetching...
[110, 00:29:50] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: 50000 row(s) returned
[111, 00:29:50] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: Running...
[111, 00:29:50] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: 0 row(s) affected
[112, 00:29:50] DROP VIEW highDeath: Running...
[112, 00:29:50] DROP VIEW highDeath: 0 row(s) affected
[113, 00:29:50] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: Running...
[113, 00:29:50] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: Fetching...
[113, 00:29:50] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: 50000 row(s) returned
[114, 00:29:50] CREATE VIEW lowDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: Running...
[114, 00:29:50] CREATE VIEW lowDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: 0 row(s) affected
[115, 00:29:50] DROP VIEW lowDeath: Running...
[115, 00:29:50] DROP VIEW lowDeath: 0 row(s) affected
[116, 00:29:50] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Running...
[116, 00:29:50] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Fetching...
[116, 00:29:50] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: 1146 row(s) returned
[117, 00:29:50] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: Running...
[117, 00:29:50] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: 0 row(s) affected
[118, 00:29:50] DROP VIEW highWomanDeath: Running...
[118, 00:29:50] DROP VIEW highWomanDeath: 0 row(s) affected
[119, 00:29:50] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Running...
[119, 00:29:50] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Fetching...
[119, 00:29:50] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: 2977 row(s) returned
[120, 00:29:50] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: Running...
[120, 00:29:50] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: 0 row(s) affected
[121, 00:29:50] DROP VIEW lowWomanDeath: Running...
[121, 00:29:50] DROP VIEW lowWomanDeath: 0 row(s) affected
[122, 00:29:50] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Running...
[122, 00:29:50] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Fetching...
[122, 00:29:50] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: 46 row(s) returned
[123, 00:29:50] CREATE VIEW lowEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: Running...
[123, 00:29:50] CREATE VIEW lowEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: 0 row(s) affected
[124, 00:29:50] DROP VIEW lowEducation: Running...
[124, 00:29:50] DROP VIEW lowEducation: 0 row(s) affected
[125, 00:29:50] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Running...
[125, 00:29:50] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Fetching...
[125, 00:29:50] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: 33 row(s) returned
[126, 00:29:50] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: Running...
[126, 00:29:50] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: 0 row(s) affected
[127, 00:29:50] DROP VIEW highEducation: Running...
[127, 00:29:50] DROP VIEW highEducation: 0 row(s) affected
[128, 00:29:50] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Running...
[128, 00:29:50] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Fetching...
[128, 00:29:50] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: 195 row(s) returned
[129, 00:29:50] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: Running...
[129, 00:29:50] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: 0 row(s) affected
[130, 00:29:50] DROP VIEW highFunding: Running...
[130, 00:29:50] DROP VIEW highFunding: 0 row(s) affected
[131, 00:29:50] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Running...
[131, 00:29:50] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Fetching...
[131, 00:29:50] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: 753 row(s) returned
[132, 00:29:50] CREATE VIEW lowFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: Running...
[132, 00:29:50] CREATE VIEW lowFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: 0 row(s) affected
[133, 00:29:50] DROP VIEW lowFunding: Running...
[133, 00:29:50] DROP VIEW lowFunding: 0 row(s) affected
[134, 00:33:10] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: Running...
[134, 00:33:10] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: Fetching...
[134, 00:33:10] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: 50000 row(s) returned
[135, 00:33:10] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: Running...
[135, 00:33:10] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: 0 row(s) affected
[136, 00:33:10] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: Running...
[136, 00:33:10] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: Fetching...
[136, 00:33:11] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: 50000 row(s) returned
[137, 00:33:11] CREATE VIEW lowDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: Running...
[137, 00:33:11] CREATE VIEW lowDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: 0 row(s) affected
[138, 00:33:11] DROP VIEW lowDeath: Running...
[138, 00:33:11] DROP VIEW lowDeath: 0 row(s) affected
[139, 00:33:11] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Running...
[139, 00:33:11] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Fetching...
[139, 00:33:11] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: 1146 row(s) returned
[140, 00:33:11] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: Running...
[140, 00:33:11] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: 0 row(s) affected
[141, 00:33:11] DROP VIEW highWomanDeath: Running...
[141, 00:33:11] DROP VIEW highWomanDeath: 0 row(s) affected
[142, 00:33:11] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Running...
[142, 00:33:11] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Fetching...
[142, 00:33:11] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: 2977 row(s) returned
[143, 00:33:11] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: Running...
[143, 00:33:11] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: 0 row(s) affected
[144, 00:33:11] DROP VIEW lowWomanDeath: Running...
[144, 00:33:11] DROP VIEW lowWomanDeath: 0 row(s) affected
[145, 00:33:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Running...
[145, 00:33:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Fetching...
[145, 00:33:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: 46 row(s) returned
[146, 00:33:11] CREATE VIEW lowEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: Running...
[146, 00:33:11] CREATE VIEW lowEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: 0 row(s) affected
[147, 00:33:11] DROP VIEW lowEducation: Running...
[147, 00:33:11] DROP VIEW lowEducation: 0 row(s) affected
[148, 00:33:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Running...
[148, 00:33:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Fetching...
[148, 00:33:11] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: 33 row(s) returned
[149, 00:33:11] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: Running...
[149, 00:33:11] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: 0 row(s) affected
[150, 00:33:11] DROP VIEW highEducation: Running...
[150, 00:33:11] DROP VIEW highEducation: 0 row(s) affected
[151, 00:33:11] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Running...
[151, 00:33:11] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Fetching...
[151, 00:33:11] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: 195 row(s) returned
[152, 00:33:11] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: Running...
[152, 00:33:11] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: 0 row(s) affected
[153, 00:33:11] DROP VIEW highFunding: Running...
[153, 00:33:11] DROP VIEW highFunding: 0 row(s) affected
[154, 00:33:11] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Running...
[154, 00:33:11] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Fetching...
[154, 00:33:11] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: 753 row(s) returned
[155, 00:33:11] CREATE VIEW lowFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: Running...
[155, 00:33:11] CREATE VIEW lowFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: 0 row(s) affected
[156, 00:33:11] DROP VIEW lowFunding: Running...
[156, 00:33:11] DROP VIEW lowFunding: 0 row(s) affected
[157, 00:33:30] DROP VIEW `306_step2`.`highdeath`: Running...
[157, 00:33:30] DROP VIEW `306_step2`.`highdeath`: 0 row(s) affected
[158, 00:34:23] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: Running...
[158, 00:34:23] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: Fetching...
[158, 00:34:23] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: 50000 row(s) returned
[159, 00:34:23] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: Running...
[159, 00:34:23] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: 0 row(s) affected
[160, 00:34:23] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: Running...
[160, 00:34:23] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: Fetching...
[160, 00:34:23] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: 50000 row(s) returned
[161, 00:34:23] CREATE VIEW lowDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: Running...
[161, 00:34:23] CREATE VIEW lowDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: 0 row(s) affected
[162, 00:34:23] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Running...
[162, 00:34:23] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Fetching...
[162, 00:34:23] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: 1146 row(s) returned
[163, 00:34:23] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: Running...
[163, 00:34:23] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: 0 row(s) affected
[164, 00:34:23] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Running...
[164, 00:34:23] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Fetching...
[164, 00:34:23] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: 2977 row(s) returned
[165, 00:34:23] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: Running...
[165, 00:34:23] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: 0 row(s) affected
[166, 00:34:23] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Running...
[166, 00:34:23] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Fetching...
[166, 00:34:23] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: 46 row(s) returned
[167, 00:34:23] CREATE VIEW lowEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: Running...
[167, 00:34:23] CREATE VIEW lowEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: 0 row(s) affected
[168, 00:34:23] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Running...
[168, 00:34:23] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Fetching...
[168, 00:34:23] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: 33 row(s) returned
[169, 00:34:23] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: Running...
[169, 00:34:23] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: 0 row(s) affected
[170, 00:34:23] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Running...
[170, 00:34:23] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Fetching...
[170, 00:34:23] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: 195 row(s) returned
[171, 00:34:23] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: Running...
[171, 00:34:23] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: 0 row(s) affected
[172, 00:34:23] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Running...
[172, 00:34:23] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Fetching...
[172, 00:34:23] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: 753 row(s) returned
[173, 00:34:23] CREATE VIEW lowFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: Running...
[173, 00:34:23] CREATE VIEW lowFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: 0 row(s) affected
[174, 16:23:53] SELECT AVG(D.death_num)
FROM HIV_death
LIMIT 0, 50000
: Running...
[174, 16:23:53] SELECT AVG(D.death_num)
FROM HIV_death
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'D.death_num' in 'field list'
[175, 16:25:06] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: Running...
[175, 16:25:06] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[175, 16:25:06] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: 1 row(s) returned
[176, 16:32:26] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: Running...
[176, 16:32:26] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: Fetching...
[176, 16:32:26] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: 1 row(s) returned
[177, 16:32:54] SELECT AVG(D.death_num)
FROM HIV_death D

SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E: Running...
[177, 16:32:54] SELECT AVG(D.death_num)
FROM HIV_death D

SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E' at line 4
[178, 16:34:22] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: Running...
[178, 16:34:22] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: Fetching...
[178, 16:34:22] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: 1 row(s) returned
[179, 16:52:29] SELECT F.ISOYEAR
FROM lowDeath L, high_Funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num < 12000 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM lowDeath L, high_Funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num=12000)
LIMIT 0, 50000
: Running...
[179, 16:52:29] SELECT F.ISOYEAR
FROM lowDeath L, high_Funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num < 12000 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM lowDeath L, high_Funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num=12000)
LIMIT 0, 50000
: Error Code: 1146. Table '306_step2.high_funding' doesn't exist
[180, 16:54:59] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num < 12000 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num=12000)
LIMIT 0, 50000
: Running...
[180, 16:54:59] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num < 12000 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num=12000)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'L.death_num' in 'where clause'
[181, 16:55:05] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num < 12000 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num=12000)
LIMIT 0, 50000
: Running...
[181, 16:55:05] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num < 12000 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num=12000)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'L.death_num' in 'where clause'
[182, 16:58:59] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding_rate > 77185666 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[182, 16:58:59] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding_rate > 77185666 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'F.total_funding_rate' in 'where clause'
[183, 16:59:13] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding_rate > 77185666 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[183, 16:59:13] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding_rate > 77185666 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'F.total_funding_rate' in 'where clause'
[184, 17:00:12] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[184, 17:00:12] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'L.death_num' in 'where clause'
[185, 22:24:26] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: Running...
[185, 22:24:27] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: Fetching...
[185, 22:24:27] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: 1 row(s) returned
[186, 22:24:33] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E

SELECT AVG(D.death_num)
FROM HIV_death D: Running...
[186, 22:24:33] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E

SELECT AVG(D.death_num)
FROM HIV_death D: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT AVG(D.death_num)
FROM HIV_death D' at line 4
[187, 22:25:11] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: Running...
[187, 22:25:11] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[187, 22:25:11] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: 1 row(s) returned
[188, 22:25:19] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E

SELECT AVG(D.death_num)
FROM HIV_death D: Running...
[188, 22:25:19] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E

SELECT AVG(D.death_num)
FROM HIV_death D: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'SELECT AVG(D.death_num)
FROM HIV_death D' at line 4
[189, 22:25:27] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: Running...
[189, 22:25:27] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: Fetching...
[189, 22:25:27] SELECT AVG(E.total_knowledge_rate)
FROM HIV_education E
LIMIT 0, 50000
: 1 row(s) returned
[190, 22:25:27] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: Running...
[190, 22:25:27] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[190, 22:25:27] SELECT AVG(D.death_num)
FROM HIV_death D
LIMIT 0, 50000
: 1 row(s) returned
[191, 22:30:17] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[191, 22:30:17] SELECT F.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'L.death_num' in 'where clause'
[192, 22:30:47] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[192, 22:30:47] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_cases L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'L.death_num' in 'where clause'
[193, 22:33:53] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[193, 22:33:53] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Fetching...
[193, 22:33:53] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: 101 row(s) returned
[194, 22:34:32] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 771856669999999999999 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[194, 22:34:32] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 771856669999999999999 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Fetching...
[194, 22:34:32] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 771856669999999999999 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: 0 row(s) returned
[195, 22:34:40] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[195, 22:34:40] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Fetching...
[195, 22:34:40] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: 101 row(s) returned
[196, 22:38:07] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 1844490 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[196, 22:38:07] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 1844490 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Fetching...
[196, 22:38:07] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 1844490 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: 141 row(s) returned
[197, 22:40:02] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 989975569 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Running...
[197, 22:40:02] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 989975569 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: Fetching...
[197, 22:40:02] SELECT F.ISOYEAR, L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 989975569 AND F.ISOYEAR NOT IN (SELECT L.ISOYEAR
FROM HIV_death L, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND L.death_num<12000)
LIMIT 0, 50000
: 2 row(s) returned
[198, 22:48:20] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND D.death_num < 12000
LIMIT 0, 50000
: Running...
[198, 22:48:20] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=L.ISOYEAR
AND F.total_funding > 77185666 AND D.death_num < 12000
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'L.ISOYEAR' in 'where clause'
[199, 22:48:54] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding > 77185666 AND D.death_num < 12000
LIMIT 0, 50000
: Running...
[199, 22:48:54] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding > 77185666 AND D.death_num < 12000
LIMIT 0, 50000
: Fetching...
[199, 22:48:54] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding > 77185666 AND D.death_num < 12000
LIMIT 0, 50000
: 94 row(s) returned
[200, 22:50:03] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding < 77185666 AND D.death_num > 12000
LIMIT 0, 50000
: Running...
[200, 22:50:03] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding < 77185666 AND D.death_num > 12000
LIMIT 0, 50000
: Fetching...
[200, 22:50:03] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding < 77185666 AND D.death_num > 12000
LIMIT 0, 50000
: 42 row(s) returned
[201, 22:50:11] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding > 77185666 AND D.death_num < 12000
LIMIT 0, 50000
: Running...
[201, 22:50:11] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding > 77185666 AND D.death_num < 12000
LIMIT 0, 50000
: Fetching...
[201, 22:50:11] SELECT D.ISOYEAR, F.ISOYEAR
FROM HIV_death D, HIV_funding F
WHERE F.ISOYEAR=D.ISOYEAR
AND F.total_funding > 77185666 AND D.death_num < 12000
LIMIT 0, 50000
: 94 row(s) returned
[202, 22:57:25] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Running...
[202, 22:57:26] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Fetching...
[202, 22:57:26] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: 927 row(s) returned
[203, 22:59:29] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <5000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Running...
[203, 22:59:29] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <5000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Fetching...
[203, 22:59:29] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <5000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: 927 row(s) returned
[204, 22:59:39] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <10 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Running...
[204, 22:59:39] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <10 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Fetching...
[204, 22:59:39] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <10 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: 927 row(s) returned
[205, 22:59:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <9999999999 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Running...
[205, 22:59:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <9999999999 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Fetching...
[205, 22:59:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <9999999999 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: 927 row(s) returned
[206, 23:00:26] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR=L.ISOYEAR NOT IN( L.death_num <12000 )
LIMIT 0, 50000
: Running...
[206, 23:00:26] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR=L.ISOYEAR NOT IN( L.death_num <12000 )
LIMIT 0, 50000
: Fetching...
[206, 23:00:27] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR=L.ISOYEAR NOT IN( L.death_num <12000 )
LIMIT 0, 50000
: 50000 row(s) returned
[207, 23:01:53] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Running...
[207, 23:01:53] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Fetching...
[207, 23:01:53] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: 927 row(s) returned
[208, 23:01:59] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 18444900 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Running...
[208, 23:01:59] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 18444900 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Fetching...
[208, 23:01:59] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 18444900 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: 927 row(s) returned
[209, 23:02:04] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490000000 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Running...
[209, 23:02:04] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490000000 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Fetching...
[209, 23:02:04] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490000000 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: 927 row(s) returned
[210, 23:02:11] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Running...
[210, 23:02:11] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: Fetching...
[210, 23:02:11] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND F.ISOYEAR=L.ISOYEAR
LIMIT 0, 50000
: 927 row(s) returned
[211, 23:02:28] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 )
LIMIT 0, 50000
: Running...
[211, 23:02:28] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 )
LIMIT 0, 50000
: Fetching...
[211, 23:02:28] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 )
LIMIT 0, 50000
: 50000 row(s) returned
[212, 23:02:49] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[212, 23:02:49] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[212, 23:02:49] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 927 row(s) returned
[213, 23:03:06] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[213, 23:03:06] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[213, 23:03:06] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 927 row(s) returned
[214, 23:03:38] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[214, 23:03:38] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[214, 23:03:38] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 927 row(s) returned
[215, 23:04:33] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[215, 23:04:33] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[215, 23:04:33] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[216, 23:05:12] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 184449000 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[216, 23:05:12] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 184449000 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[216, 23:05:12] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 184449000 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 30 row(s) returned
[217, 23:05:20] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[217, 23:05:20] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[217, 23:05:20] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[218, 23:05:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 989975569 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[218, 23:05:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 989975569 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[218, 23:05:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 989975569 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 2 row(s) returned
[219, 23:05:55] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[219, 23:05:55] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[219, 23:05:55] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[220, 23:06:09] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <5000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[220, 23:06:09] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <5000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[220, 23:06:09] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <5000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 544 row(s) returned
[221, 23:06:24] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <4000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[221, 23:06:24] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <4000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[221, 23:06:24] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <4000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 515 row(s) returned
[222, 23:06:48] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[222, 23:06:48] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[222, 23:06:48] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[223, 23:07:25] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[223, 23:07:25] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[223, 23:07:25] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 141 row(s) returned
[224, 23:08:50] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND L.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[224, 23:08:50] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND L.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[224, 23:08:50] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND L.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 141 row(s) returned
[225, 23:09:12] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[225, 23:09:12] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[225, 23:09:12] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 141 row(s) returned
[226, 23:10:26] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490    AND (F.ISOYEAR=L.ISOYEAR) AND F.ISOYEAR NOT IN( L.death_num >12000 )
LIMIT 0, 50000
: Running...
[226, 23:10:26] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490    AND (F.ISOYEAR=L.ISOYEAR) AND F.ISOYEAR NOT IN( L.death_num >12000 )
LIMIT 0, 50000
: Fetching...
[226, 23:10:26] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490    AND (F.ISOYEAR=L.ISOYEAR) AND F.ISOYEAR NOT IN( L.death_num >12000 )
LIMIT 0, 50000
: 141 row(s) returned
[227, 23:10:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[227, 23:10:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[227, 23:10:47] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[228, 23:10:55] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[228, 23:10:55] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[228, 23:10:55] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 141 row(s) returned
[229, 23:11:07] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490    AND (F.ISOYEAR=L.ISOYEAR) AND F.ISOYEAR NOT IN( L.death_num >12000 )
LIMIT 0, 50000
: Running...
[229, 23:11:07] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490    AND (F.ISOYEAR=L.ISOYEAR) AND F.ISOYEAR NOT IN( L.death_num >12000 )
LIMIT 0, 50000
: Fetching...
[229, 23:11:07] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490    AND (F.ISOYEAR=L.ISOYEAR) AND F.ISOYEAR NOT IN( L.death_num >12000 )
LIMIT 0, 50000
: 141 row(s) returned
[230, 23:13:00] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[230, 23:13:00] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[230, 23:13:00] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 141 row(s) returned
[231, 23:13:00] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[231, 23:13:00] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[231, 23:13:00] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[232, 23:29:04] SELECT highFunding, lowDeath 
FROM highFunding LEFT OUTER JOIN lowDeath
ON highFunding.ISOYEAR = lowDeath.ISOYEAR
LIMIT 0, 50000
: Running...
[232, 23:29:04] SELECT highFunding, lowDeath 
FROM highFunding LEFT OUTER JOIN lowDeath
ON highFunding.ISOYEAR = lowDeath.ISOYEAR
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'highFunding' in 'field list'
[233, 23:29:56] SELECT highFunding F, lowDeath D
FROM highFunding LEFT OUTER JOIN lowDeath
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: Running...
[233, 23:29:56] SELECT highFunding F, lowDeath D
FROM highFunding LEFT OUTER JOIN lowDeath
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'highFunding' in 'field list'
[234, 23:30:55] SELECT L.death_num, F.total_funding
FROM highFunding LEFT OUTER JOIN lowDeath
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: Running...
[234, 23:30:55] SELECT L.death_num, F.total_funding
FROM highFunding LEFT OUTER JOIN lowDeath
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'L.death_num' in 'field list'
[235, 23:32:29] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: Running...
[235, 23:32:29] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: Fetching...
[235, 23:32:29] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: 6150 row(s) returned
[236, 23:33:16] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: Running...
[236, 23:33:16] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: Fetching...
[236, 23:33:16] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR
LIMIT 0, 50000
: 6150 row(s) returned
[237, 23:36:08] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND L.death_num <12000
LIMIT 0, 50000
: Running...
[237, 23:36:08] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND L.death_num <12000
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'L.death_num' in 'where clause'
[238, 23:36:23] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: Running...
[238, 23:36:23] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: Fetching...
[238, 23:36:23] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: 653 row(s) returned
[239, 23:36:38] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: Running...
[239, 23:36:38] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: Fetching...
[239, 23:36:38] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: 141 row(s) returned
[240, 23:36:44] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[240, 23:36:44] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[240, 23:36:44] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 141 row(s) returned
[241, 23:36:44] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[241, 23:36:44] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[241, 23:36:44] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[242, 23:40:05] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[242, 23:40:05] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[242, 23:40:05] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 141 row(s) returned
[243, 23:40:05] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[243, 23:40:05] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[243, 23:40:05] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[244, 23:40:05] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: Running...
[244, 23:40:05] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: Fetching...
[244, 23:40:05] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: 141 row(s) returned
[245, 23:40:05] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: Running...
[245, 23:40:06] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: Fetching...
[245, 23:40:06] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: 653 row(s) returned
[246, 23:41:56] SELECT ISOYEAR,total_funding
FROM highFunding 
WHERE ISOYEAR IN (
  SELECT ISOYEAR 
  FROM lowDeath
)
LIMIT 0, 50000
: Running...
[246, 23:41:56] SELECT ISOYEAR,total_funding
FROM highFunding 
WHERE ISOYEAR IN (
  SELECT ISOYEAR 
  FROM lowDeath
)
LIMIT 0, 50000
: Fetching...
[246, 23:41:56] SELECT ISOYEAR,total_funding
FROM highFunding 
WHERE ISOYEAR IN (
  SELECT ISOYEAR 
  FROM lowDeath
)
LIMIT 0, 50000
: 94 row(s) returned
[247, 23:56:41] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND F.ISOYEAR IN (
    SELECT ISOYEAR
    FROM lowDeath
  )
LIMIT 0, 50000
: Running...
[247, 23:56:41] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND F.ISOYEAR IN (
    SELECT ISOYEAR
    FROM lowDeath
  )
LIMIT 0, 50000
: Fetching...
[247, 23:56:41] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND F.ISOYEAR IN (
    SELECT ISOYEAR
    FROM lowDeath
  )
LIMIT 0, 50000
: 94 row(s) returned
[248, 23:56:41] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND EXISTS (
    SELECT S.ISOYEAR
    FROM lowDeath S
    WHERE ISOYEAR = F.ISOYEAR
  )
LIMIT 0, 50000
: Running...
[248, 23:56:41] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND EXISTS (
    SELECT S.ISOYEAR
    FROM lowDeath S
    WHERE ISOYEAR = F.ISOYEAR
  )
LIMIT 0, 50000
: Fetching...
[248, 23:56:41] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND EXISTS (
    SELECT S.ISOYEAR
    FROM lowDeath S
    WHERE ISOYEAR = F.ISOYEAR
  )
LIMIT 0, 50000
: 94 row(s) returned
[249, 00:08:37] SELECT  h.ISOYEAR, SUM(h.death_num) AS sumdeath
FROM HIV_death h
JOIN HIV_education d ON h.ISOYEAR = d.ISOYEAR
GROUP BY h.ISOYEAR, d.ISOYEAR
HAVING SUM(d.total_knowledge_rate) > 33
LIMIT 0, 50000
: Running...
[249, 00:08:37] SELECT  h.ISOYEAR, SUM(h.death_num) AS sumdeath
FROM HIV_death h
JOIN HIV_education d ON h.ISOYEAR = d.ISOYEAR
GROUP BY h.ISOYEAR, d.ISOYEAR
HAVING SUM(d.total_knowledge_rate) > 33
LIMIT 0, 50000
: Fetching...
[249, 00:08:37] SELECT  h.ISOYEAR, SUM(h.death_num) AS sumdeath
FROM HIV_death h
JOIN HIV_education d ON h.ISOYEAR = d.ISOYEAR
GROUP BY h.ISOYEAR, d.ISOYEAR
HAVING SUM(d.total_knowledge_rate) > 33
LIMIT 0, 50000
: 33 row(s) returned
[250, 00:23:17] SELECT D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Running...
[250, 00:23:17] SELECT D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Fetching...
[250, 00:23:17] SELECT D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: 2442 row(s) returned
[251, 00:24:06] SELECT D.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Running...
[251, 00:24:06] SELECT D.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Error Code: 1055. Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.D.ISOYEAR' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[252, 00:24:46] SELECT D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Running...
[252, 00:24:46] SELECT D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Fetching...
[252, 00:24:46] SELECT D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: 2442 row(s) returned
[253, 00:26:54] SELECT D.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Running...
[253, 00:26:54] SELECT D.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Error Code: 1055. Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.D.ISOYEAR' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[254, 00:27:37] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Running...
[254, 00:27:37] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Error Code: 1055. Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.E.ISOYEAR' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[255, 00:29:06] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING 1 < (SELECT COUNT(*) FROM HIV_death D)
LIMIT 0, 50000
: Running...
[255, 00:29:06] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING 1 < (SELECT COUNT(*) FROM HIV_death D)
LIMIT 0, 50000
: Error Code: 1055. Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.E.ISOYEAR' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[256, 00:29:44] SELECT D.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num, D.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Running...
[256, 00:29:46] SELECT D.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num, D.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Fetching...
[256, 00:29:46] SELECT D.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num, D.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: 6150 row(s) returned
[257, 00:38:39] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING 1 < (SELECT COUNT(*) FROM HIV_death D WHERE D.dyear = 2016)
LIMIT 0, 50000
: Running...
[257, 00:38:39] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
HAVING 1 < (SELECT COUNT(*) FROM HIV_death D WHERE D.dyear = 2016)
LIMIT 0, 50000
: Error Code: 1055. Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.E.ISOYEAR' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[258, 00:52:14] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
LIMIT 0, 50000
: Running...
[258, 00:52:14] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
GROUP BY D.death_num
LIMIT 0, 50000
: Error Code: 1055. Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.E.ISOYEAR' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[259, 00:53:29] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
HAVING D.death_num
LIMIT 0, 50000
: Running...
[259, 00:53:29] SELECT E.ISOYEAR, D.death_num, MIN(E.total_knowledge_rate)
FROM HIV_death D, HIV_education E
HAVING D.death_num
LIMIT 0, 50000
: Error Code: 1140. In aggregated query without GROUP BY, expression #1 of SELECT list contains nonaggregated column '306_step2.E.ISOYEAR'; this is incompatible with sql_mode=only_full_group_by
[260, 01:49:32] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[260, 01:49:32] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[260, 01:49:32] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[261, 02:00:25] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[261, 02:00:25] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[261, 02:00:25] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[262, 02:00:25] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[262, 02:00:25] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[262, 02:00:25] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[263, 02:09:51] SELECT F.total_funding, C.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY C.total_funding, C.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[263, 02:09:51] SELECT F.total_funding, C.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY C.total_funding, C.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'C.ISOYEAR' in 'field list'
[264, 02:10:05] SELECT F.total_funding, C.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY F.total_funding, C.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[264, 02:10:05] SELECT F.total_funding, C.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY F.total_funding, C.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'C.ISOYEAR' in 'field list'
[265, 02:10:16] SELECT F.total_funding, C.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY F.total_funding, F.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[265, 02:10:16] SELECT F.total_funding, C.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY F.total_funding, F.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'C.ISOYEAR' in 'field list'
[266, 02:10:41] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY F.total_funding, F.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[266, 02:10:41] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY F.total_funding, F.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[266, 02:10:41] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE F.total_funding > (SELECT MIN(total_funding) FROM HIV_funding)
GROUP BY F.total_funding, F.ISOYEAR
HAVING MIN(E.total_knowledge_rate) <(SELECT MIN(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 0 row(s) returned
[267, 02:11:27] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[267, 02:11:27] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[267, 02:11:27] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[268, 02:11:27] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[268, 02:11:27] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[268, 02:11:27] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[269, 02:11:27] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[269, 02:11:27] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[269, 02:11:27] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[270, 02:15:38] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
LIMIT 0, 50000
: Running...
[270, 02:15:38] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
LIMIT 0, 50000
: Fetching...
[270, 02:15:38] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
LIMIT 0, 50000
: 0 row(s) returned
[271, 02:18:36] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Running...
[271, 02:18:36] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Fetching...
[271, 02:18:36] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: 0 row(s) returned
[272, 02:18:38] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Running...
[272, 02:18:38] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: Fetching...
[272, 02:18:38] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 1
LIMIT 0, 50000
: 0 row(s) returned
[273, 02:18:41] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 2
LIMIT 0, 50000
: Running...
[273, 02:18:41] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 2
LIMIT 0, 50000
: Fetching...
[273, 02:18:41] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) > 2
LIMIT 0, 50000
: 0 row(s) returned
[274, 02:18:50] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) < 1
LIMIT 0, 50000
: Running...
[274, 02:18:50] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) < 1
LIMIT 0, 50000
: Fetching...
[274, 02:18:50] SELECT F.total_funding, F.ISOYEAR, MIN(E.total_knowledge_rate) AS min_knowledge_rate
FROM HIV_funding F
INNER JOIN HIV_education E ON F.ISOYEAR = E.ISOYEAR
WHERE E.total_knowledge_rate = (SELECT MIN(total_knowledge_rate) FROM HIV_education)
GROUP BY F.total_funding, F.ISOYEAR
HAVING COUNT(*) < 1
LIMIT 0, 50000
: 0 row(s) returned
[275, 02:44:48] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[275, 02:44:48] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[275, 02:44:48] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[276, 02:44:48] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[276, 02:44:48] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[276, 02:44:48] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[277, 02:44:48] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[277, 02:44:48] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'total_funding' in 'having clause'
[278, 02:46:17] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[278, 02:46:17] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[278, 02:46:17] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[279, 02:46:17] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[279, 02:46:17] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[279, 02:46:17] SELECT c.country_name, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[280, 02:46:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[280, 02:46:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[280, 02:46:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[281, 02:46:32] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[281, 02:46:32] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[281, 02:46:32] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[282, 02:46:32] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[282, 02:46:32] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[282, 02:46:32] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS total_funding
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[283, 02:46:47] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[283, 02:46:47] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[283, 02:46:47] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[284, 02:46:47] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totals
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[284, 02:46:47] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totals
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING total_funding > AVG(f.total_funding)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'total_funding' in 'having clause'
[285, 02:47:16] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[285, 02:47:16] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[285, 02:47:16] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[286, 02:47:16] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[286, 02:47:16] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[286, 02:47:16] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[287, 02:48:34] SELECT c.country, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[287, 02:48:34] SELECT c.country, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'c.country' in 'field list'
[288, 02:49:20] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[288, 02:49:20] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[288, 02:49:20] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[289, 02:50:58] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[289, 02:50:58] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[289, 02:50:58] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[290, 02:51:43] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[290, 02:51:43] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[290, 02:51:44] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[291, 02:54:20] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(maxdeath - mindeath)/4 AS estimated_standard_deviation
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[291, 02:54:20] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(maxdeath - mindeath)/4 AS estimated_standard_deviation
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'maxdeath' in 'field list'
[292, 02:55:31] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_standard_deviation
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[292, 02:55:31] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_standard_deviation
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[292, 02:55:31] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_standard_deviation
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[293, 02:56:07] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[293, 02:56:07] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[293, 02:56:07] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[294, 02:56:36] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[294, 02:56:36] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[294, 02:56:36] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[295, 02:56:36] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[295, 02:56:36] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[295, 02:56:36] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[296, 02:56:36] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[296, 02:56:36] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[296, 02:56:36] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[297, 03:02:00] SELECT c.country_name
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D, HIV_education E
JOIN countries c ON D.ISOYEAR = c.ISOYEAR AND D.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[297, 03:02:00] SELECT c.country_name
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D, HIV_education E
JOIN countries c ON D.ISOYEAR = c.ISOYEAR AND D.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'D.ISOYEAR' in 'on clause'
[298, 03:06:58] SELECT c.country_name
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[298, 03:06:58] SELECT c.country_name
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'E.ISOYEAR' in 'on clause'
[299, 03:07:15] SELECT c.country_name
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D, HIV_education E
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[299, 03:07:15] SELECT c.country_name
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D, HIV_education E
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'D.ISOYEAR' in 'on clause'
[300, 03:09:18] SELECT c.country_name
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std, E.total_knowledge_rate
FROM HIV_death D, HIV_education E
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[300, 03:09:18] SELECT c.country_name
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std, E.total_knowledge_rate
FROM HIV_death D, HIV_education E
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'D.ISOYEAR' in 'on clause'
[301, 03:09:37] SELECT c.country_name,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON E.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: Running...
[301, 03:09:37] SELECT c.country_name,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON E.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: Fetching...
[301, 03:09:37] SELECT c.country_name,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON E.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: 79 row(s) returned
[302, 03:13:49] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: Running...
[302, 03:13:49] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: Fetching...
[302, 03:13:49] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: 205 row(s) returned
[303, 03:14:40] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: Running...
[303, 03:14:40] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: Fetching...
[303, 03:14:40] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: 79 row(s) returned
[304, 03:15:27] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name, E.total_knowledge_rate
LIMIT 0, 50000
: Running...
[304, 03:15:27] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name, E.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[304, 03:15:27] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name, E.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[305, 03:15:57] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D, HIV_education E
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: Running...
[305, 03:15:57] SELECT c.country_name ,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D, HIV_education E
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education E ON c.ISOYEAR = E.ISOYEAR
GROUP BY c.country_name
LIMIT 0, 50000
: Error Code: 1066. Not unique table/alias: 'E'
[306, 03:16:55] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[306, 03:16:55] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[306, 03:16:55] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[307, 03:19:04] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[307, 03:19:04] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[307, 03:19:05] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[308, 03:20:13] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[308, 03:20:13] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[308, 03:20:13] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[309, 03:20:13] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[309, 03:20:13] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[309, 03:20:13] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[310, 03:21:37] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[310, 03:21:37] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[310, 03:21:37] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[311, 03:21:37] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[311, 03:21:37] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[311, 03:21:37] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[312, 03:21:57] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[312, 03:21:57] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[312, 03:21:57] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[313, 03:21:57] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[313, 03:21:58] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[313, 03:21:58] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[314, 03:24:39] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[314, 03:24:39] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[314, 03:24:39] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[315, 03:24:39] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[315, 03:24:39] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[315, 03:24:39] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[316, 03:24:39] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = c.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[316, 03:24:40] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = c.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[316, 03:24:40] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = c.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 15990 row(s) returned
[317, 03:25:33] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[317, 03:25:33] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[317, 03:25:33] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[318, 03:25:33] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[318, 03:25:33] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[318, 03:25:33] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[319, 03:25:33] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = c.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[319, 03:25:33] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = c.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[319, 03:25:33] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = c.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 15990 row(s) returned
[320, 03:26:10] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[320, 03:26:10] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[320, 03:26:10] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[321, 03:26:10] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[321, 03:26:10] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[321, 03:26:10] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[322, 03:26:10] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = E.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[322, 03:26:10] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = E.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[322, 03:26:10] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN HIV_education e
  ON c.ISOYEAR = E.ISOYEAR
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[323, 03:26:46] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[323, 03:26:46] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[323, 03:26:46] SELECT c.country_name, 
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std,
       e.total_knowledge_rate
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[324, 03:26:46] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[324, 03:26:46] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[324, 03:26:46] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[325, 03:27:23] SELECT c.country_name,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[325, 03:27:23] SELECT c.country_name,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[325, 03:27:23] SELECT c.country_name,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_education e ON c.ISOYEAR = e.ISOYEAR
GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[326, 03:27:23] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[326, 03:27:23] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[326, 03:27:23] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[327, 03:28:51] SELECT c.country_name,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_funding e ON c.ISOYEAR = F.ISOYEAR
GROUP BY c.country_name, F.total_funding
LIMIT 0, 50000
: Running...
[327, 03:28:51] SELECT c.country_name,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_funding e ON c.ISOYEAR = F.ISOYEAR
GROUP BY c.country_name, F.total_funding
LIMIT 0, 50000
: Error Code: 1054. Unknown column 'F.total_funding' in 'field list'
[328, 03:29:37] SELECT c.country_name,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_funding F ON c.ISOYEAR = F.ISOYEAR
GROUP BY c.country_name, F.total_funding
LIMIT 0, 50000
: Running...
[328, 03:29:38] SELECT c.country_name,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_funding F ON c.ISOYEAR = F.ISOYEAR
GROUP BY c.country_name, F.total_funding
LIMIT 0, 50000
: Fetching...
[328, 03:29:38] SELECT c.country_name,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_funding F ON c.ISOYEAR = F.ISOYEAR
GROUP BY c.country_name, F.total_funding
LIMIT 0, 50000
: 935 row(s) returned
[329, 03:29:53] SELECT c.country_name,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_funding F ON c.ISOYEAR = F.ISOYEAR
GROUP BY c.country_name, F.total_funding
LIMIT 0, 50000
: Running...
[329, 03:29:54] SELECT c.country_name,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_funding F ON c.ISOYEAR = F.ISOYEAR
GROUP BY c.country_name, F.total_funding
LIMIT 0, 50000
: Fetching...
[329, 03:29:54] SELECT c.country_name,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_funding F ON c.ISOYEAR = F.ISOYEAR
GROUP BY c.country_name, F.total_funding
LIMIT 0, 50000
: 935 row(s) returned
[330, 03:35:51] SELECT D.ISOYEAR,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_education E
JOIN HIV_education E ON E.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[330, 03:35:51] SELECT D.ISOYEAR,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_education E
JOIN HIV_education E ON E.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, e.total_knowledge_rate
LIMIT 0, 50000
: Error Code: 1066. Not unique table/alias: 'E'
[331, 03:36:43] SELECT D.ISOYEAR,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_education E
JOIN HIV_education E ON E.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, E.total_knowledge_rate
LIMIT 0, 50000
: Running...
[331, 03:36:43] SELECT D.ISOYEAR,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_education E
JOIN HIV_education E ON E.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, E.total_knowledge_rate
LIMIT 0, 50000
: Error Code: 1066. Not unique table/alias: 'E'
[332, 03:37:42] SELECT D.ISOYEAR,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_education E
JOIN HIV_death D ON E.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, E.total_knowledge_rate
LIMIT 0, 50000
: Running...
[332, 03:37:42] SELECT D.ISOYEAR,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_education E
JOIN HIV_death D ON E.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, E.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[332, 03:37:42] SELECT D.ISOYEAR,e.total_knowledge_rate,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_education E
JOIN HIV_death D ON E.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, E.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[333, 03:39:37] SELECT D.ISOYEAR,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_funding F
JOIN HIV_death D ON F.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, F.total_funding
LIMIT 0, 50000
: Running...
[333, 03:39:37] SELECT D.ISOYEAR,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_funding F
JOIN HIV_death D ON F.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, F.total_funding
LIMIT 0, 50000
: Fetching...
[333, 03:39:37] SELECT D.ISOYEAR,F.total_funding,
       (MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
       
FROM HIV_funding F
JOIN HIV_death D ON F.ISOYEAR = D.ISOYEAR
GROUP BY D.ISOYEAR, F.total_funding
LIMIT 0, 50000
: 945 row(s) returned
[334, 03:47:22] SELECT c.country_name, SUM(D.death_num) AS totaldeath, W.woman_ratio
FROM HIV_death D, HIV_cases W
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_cases W ON c.ISOYEAR = W.ISOYEAR
GROUP BY c.country_name, W.woman_ratio
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[334, 03:47:22] SELECT c.country_name, SUM(D.death_num) AS totaldeath, W.woman_ratio
FROM HIV_death D, HIV_cases W
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
JOIN HIV_cases W ON c.ISOYEAR = W.ISOYEAR
GROUP BY c.country_name, W.woman_ratio
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Error Code: 1066. Not unique table/alias: 'W'
[335, 03:54:53] SELECT E.total_knowledge_rate, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.total_knowledge_rate
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[335, 03:54:53] SELECT E.total_knowledge_rate, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.total_knowledge_rate
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[335, 03:54:53] SELECT E.total_knowledge_rate, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.total_knowledge_rate
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: 0 row(s) returned
[336, 03:56:18] SELECT E.total_knowledge_rate, COUNT(*) AS yearcount, f.total_funding AS funding_in2016
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.total_knowledge_rate
HAVING funding_in2016 > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[336, 03:56:18] SELECT E.total_knowledge_rate, COUNT(*) AS yearcount, f.total_funding AS funding_in2016
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.total_knowledge_rate
HAVING funding_in2016 > AVG(f.total_funding)
LIMIT 0, 50000
: Error Code: 1055. Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.f.total_funding' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[337, 03:56:41] SELECT E.total_knowledge_rate, COUNT(*) AS yearcount, f.total_funding AS funding_in2016
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.total_knowledge_rate
LIMIT 0, 50000
: Running...
[337, 03:56:41] SELECT E.total_knowledge_rate, COUNT(*) AS yearcount, f.total_funding AS funding_in2016
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.total_knowledge_rate
LIMIT 0, 50000
: Error Code: 1055. Expression #3 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.f.total_funding' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[338, 04:01:02] SELECT E.ISOYEAR, E.total_knowledge_rate, f.total_funding AS funding_in2016
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.ISOYEAR
HAVING funding_in2016 > 0
LIMIT 0, 50000
: Running...
[338, 04:01:02] SELECT E.ISOYEAR, E.total_knowledge_rate, f.total_funding AS funding_in2016
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.ISOYEAR
HAVING funding_in2016 > 0
LIMIT 0, 50000
: Error Code: 1055. Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.E.total_knowledge_rate' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[339, 04:03:24] SELECT E.ISOYEAR, E.total_knowledge_rate, f.total_funding
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.ISOYEAR
HAVING f.total_funding > 0
LIMIT 0, 50000
: Running...
[339, 04:03:24] SELECT E.ISOYEAR, E.total_knowledge_rate, f.total_funding
FROM HIV_funding f
JOIN HIV_education E ON f.ISOYEAR = E.ISOYEAR
GROUP BY E.ISOYEAR
HAVING f.total_funding > 0
LIMIT 0, 50000
: Error Code: 1055. Expression #2 of SELECT list is not in GROUP BY clause and contains nonaggregated column '306_step2.E.total_knowledge_rate' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by
[340, 04:12:13] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[340, 04:12:13] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[340, 04:12:13] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[341, 04:14:14] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[341, 04:14:14] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[341, 04:14:14] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[342, 04:14:14] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[342, 04:14:14] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[342, 04:14:14] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[343, 04:14:14] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[343, 04:14:14] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[343, 04:14:14] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[344, 04:14:14] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Running...
[344, 04:14:14] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: Fetching...
[344, 04:14:14] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
LIMIT 0, 50000
: 79 row(s) returned
[345, 04:16:49] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[345, 04:16:49] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[345, 04:16:49] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[346, 04:16:49] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[346, 04:16:49] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[346, 04:16:49] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[347, 04:16:49] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[347, 04:16:49] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[347, 04:16:49] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[348, 04:16:49] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
  HAVING e.total_knowledge_rate>33
LIMIT 0, 50000
: Running...
[348, 04:16:49] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
  HAVING e.total_knowledge_rate>33
LIMIT 0, 50000
: Fetching...
[348, 04:16:49] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
  HAVING e.total_knowledge_rate>33
LIMIT 0, 50000
: 33 row(s) returned
[349, 14:34:38] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: Running...
[349, 14:34:39] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: Fetching...
[349, 14:34:39] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: 1 row(s) returned
[350, 14:39:35] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(death_num) AND death_num <= MAX(death_num)): Running...
[350, 14:39:35] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(death_num) AND death_num <= MAX(death_num)): Error Code: 1111. Invalid use of group function
[351, 14:41:00] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Running...
[351, 14:41:00] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[351, 14:41:00] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: 6150 row(s) returned
[352, 14:41:00] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(death_num) AND death_num <= MAX(death_num)): Running...
[352, 14:41:00] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(death_num) AND death_num <= MAX(death_num)): Error Code: 1111. Invalid use of group function
[353, 14:44:41] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Running...
[353, 14:44:41] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[353, 14:44:41] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: 6150 row(s) returned
[354, 14:44:41] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(death_num) AND death_num <= MAX(death_num)): Running...
[354, 14:44:41] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(death_num) AND death_num <= MAX(death_num)): Error Code: 1111. Invalid use of group function
[355, 14:45:45] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Running...
[355, 14:45:45] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[355, 14:45:45] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: 6150 row(s) returned
[356, 14:45:45] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(D.death_num) AND death_num <= MAX(D.death_num)): Running...
[356, 14:45:45] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(D.death_num) AND death_num <= MAX(D.death_num)): Error Code: 1111. Invalid use of group function
[357, 14:46:26] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Running...
[357, 14:46:26] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[357, 14:46:26] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: 6150 row(s) returned
[358, 14:46:26] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(D.death_num) AND death_num <= MAX(D.death_num)): Running...
[358, 14:46:26] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(D.death_num) AND death_num <= MAX(D.death_num)): Error Code: 1111. Invalid use of group function
[359, 14:46:35] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Running...
[359, 14:46:35] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[359, 14:46:35] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: 6150 row(s) returned
[360, 14:46:35] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(death_num) AND death_num <= MAX(death_num)): Running...
[360, 14:46:35] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(death_num) AND death_num <= MAX(death_num)): Error Code: 1111. Invalid use of group function
[361, 14:46:53] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Running...
[361, 14:46:53] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: Fetching...
[361, 14:46:53] SELECT D.death_num
FROM HIV_death D
LIMIT 0, 50000
: 6150 row(s) returned
[362, 14:46:53] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(D.death_num) AND death_num <= MAX(D.death_num)): Running...
[362, 14:46:53] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= MIN(D.death_num) AND death_num <= MAX(D.death_num)): Error Code: 1111. Invalid use of group function
[363, 14:48:39] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= (SELECT MIN(death_num) FROM HIV_death) AND
      death_num <= (SELECT MAX(death_num) FROM HIV_death)): Running...
[363, 14:48:39] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= (SELECT MIN(death_num) FROM HIV_death) AND
      death_num <= (SELECT MAX(death_num) FROM HIV_death)): Error Code: 3815. An expression of a check constraint 'mixmaxdetector' contains disallowed function.
[364, 14:49:43] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= (SELECT MIN(D.death_num) FROM HIV_death) AND
      death_num <= (SELECT MAX(D.death_num) FROM HIV_death)): Running...
[364, 14:49:43] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= (SELECT MIN(D.death_num) FROM HIV_death) AND
      death_num <= (SELECT MAX(D.death_num) FROM HIV_death)): Error Code: 3815. An expression of a check constraint 'mixmaxdetector' contains disallowed function.
[365, 14:50:01] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(D.death_num >= (SELECT MIN(D.death_num) FROM HIV_death) AND
      D.death_num <= (SELECT MAX(D.death_num) FROM HIV_death)): Running...
[365, 14:50:01] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(D.death_num >= (SELECT MIN(D.death_num) FROM HIV_death) AND
      D.death_num <= (SELECT MAX(D.death_num) FROM HIV_death)): Error Code: 3815. An expression of a check constraint 'mixmaxdetector' contains disallowed function.
[366, 14:51:57] CREATE TRIGGER mixmaxdetector BEFORE INSERT ON HIV_death
FOR EACH ROW 
BEGIN 
    DECLARE min_death_num INT: Running...
[366, 14:51:57] CREATE TRIGGER mixmaxdetector BEFORE INSERT ON HIV_death
FOR EACH ROW 
BEGIN 
    DECLARE min_death_num INT: Error Code: 1064. You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 4
[367, 14:54:22] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(D.death_num >= (SELECT MIN(D.death_num) FROM HIV_death) AND
      D.death_num <= (SELECT MAX(D.death_num) FROM HIV_death)): Running...
[367, 14:54:22] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(D.death_num >= (SELECT MIN(D.death_num) FROM HIV_death) AND
      D.death_num <= (SELECT MAX(D.death_num) FROM HIV_death)): Error Code: 3815. An expression of a check constraint 'mixmaxdetector' contains disallowed function.
[368, 14:54:33] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(D.death_num >= (SELECT MIN(D.death_num) FROM HIV_death) AND
      D.death_num <= (SELECT MAX(D.death_num) FROM HIV_death)): Running...
[368, 14:54:33] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(D.death_num >= (SELECT MIN(D.death_num) FROM HIV_death) AND
      D.death_num <= (SELECT MAX(D.death_num) FROM HIV_death)): Error Code: 3815. An expression of a check constraint 'mixmaxdetector' contains disallowed function.
[369, 14:57:32] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= (SELECT MIN(death_num) FROM HIV_death) AND
      death_num <= (SELECT MAX(death_num) FROM HIV_death)): Running...
[369, 14:57:32] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= (SELECT MIN(death_num) FROM HIV_death) AND
      death_num <= (SELECT MAX(death_num) FROM HIV_death)): Error Code: 3815. An expression of a check constraint 'mixmaxdetector' contains disallowed function.
[370, 15:06:32] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[370, 15:06:33] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): 6150 row(s) affected
Records: 6150  Duplicates: 0  Warnings: 0
[371, 15:07:55] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[371, 15:07:55] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Error Code: 3822. Duplicate check constraint name 'mixmaxdetector'.
[372, 15:08:39] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[372, 15:08:39] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Error Code: 3822. Duplicate check constraint name 'mixmaxdetector'.
[373, 15:08:49] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[373, 15:08:49] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Error Code: 3822. Duplicate check constraint name 'mixmaxdetector'.
[374, 15:09:49] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[374, 15:09:49] ALTER TABLE HIV_death
ADD CONSTRAINT mixmaxdetector
CHECK(death_num >= 0 AND
      death_num <= 1844490): Error Code: 3822. Duplicate check constraint name 'mixmaxdetector'.
[375, 15:12:30] ALTER TABLE HIV_death
ADD CONSTRAINT dtc
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[375, 15:12:30] ALTER TABLE HIV_death
ADD CONSTRAINT dtc
CHECK(death_num >= 0 AND
      death_num <= 1844490): 6150 row(s) affected
Records: 6150  Duplicates: 0  Warnings: 0
[376, 15:12:30] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, '2022-Turkey'): Running...
[376, 15:12:30] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, '2022-Turkey'): 1 row(s) affected
[377, 15:13:20] ALTER TABLE HIV_death
ADD CONSTRAINT dtc
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[377, 15:13:20] ALTER TABLE HIV_death
ADD CONSTRAINT dtc
CHECK(death_num >= 0 AND
      death_num <= 1844490): Error Code: 3822. Duplicate check constraint name 'dtc'.
[378, 15:14:15] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, -5, '2022-Turkey'): Running...
[378, 15:14:15] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, -5, '2022-Turkey'): Error Code: 3819. Check constraint 'dtc' is violated.
[379, 15:18:07] CREATE TRIGGER trg_HIV_death_before_insert
BEFORE INSERT ON HIV_death
FOR EACH ROW
BEGIN
    IF NEW.death_num < 0 THEN
        SET NEW.death_num = 0;
    ELSEIF NEW.death_num > 1844490 THEN
        SET NEW.death_num = 1844490;
    END IF;
END: Running...
[379, 15:18:07] CREATE TRIGGER trg_HIV_death_before_insert
BEFORE INSERT ON HIV_death
FOR EACH ROW
BEGIN
    IF NEW.death_num < 0 THEN
        SET NEW.death_num = 0;
    ELSEIF NEW.death_num > 1844490 THEN
        SET NEW.death_num = 1844490;
    END IF;
END: 0 row(s) affected
[380, 15:18:07] CREATE TRIGGER trg_HIV_death_before_update
BEFORE UPDATE ON HIV_death
FOR EACH ROW
BEGIN
    IF NEW.death_num < 0 THEN
        SET NEW.death_num = 0;
    ELSEIF NEW.death_num > 1844490 THEN
        SET NEW.death_num = 1844490;
    END IF;
END: Running...
[380, 15:18:07] CREATE TRIGGER trg_HIV_death_before_update
BEFORE UPDATE ON HIV_death
FOR EACH ROW
BEGIN
    IF NEW.death_num < 0 THEN
        SET NEW.death_num = 0;
    ELSEIF NEW.death_num > 1844490 THEN
        SET NEW.death_num = 1844490;
    END IF;
END: 0 row(s) affected
[381, 15:18:35] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, -5, '2022-Turkey'): Running...
[381, 15:18:35] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, -5, '2022-Turkey'): Error Code: 1062. Duplicate entry '2022-2022-Turkey' for key 'hiv_death.PRIMARY'
[382, 15:20:20] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, -5, '2022-France'): Running...
[382, 15:20:20] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, -5, '2022-France'): 1 row(s) affected
[383, 15:22:54] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: Running...
[383, 15:22:54] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: Fetching...
[383, 15:22:54] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: 6152 row(s) returned
[384, 15:23:01] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: Running...
[384, 15:23:01] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: Fetching...
[384, 15:23:01] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: 6152 row(s) returned
[385, 15:24:47] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2023, 999999999999999, '2023-France'): Running...
[385, 15:24:47] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2023, 999999999999999, '2023-France'): 1 row(s) affected
[386, 15:24:59] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: Running...
[386, 15:24:59] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: Fetching...
[386, 15:24:59] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: 6153 row(s) returned
[387, 15:27:32] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: Running...
[387, 15:27:32] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: Fetching...
[387, 15:27:32] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: 1 row(s) returned
[388, 15:27:32] ALTER TABLE HIV_death
ADD CONSTRAINT dtc
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[388, 15:27:32] ALTER TABLE HIV_death
ADD CONSTRAINT dtc
CHECK(death_num >= 0 AND
      death_num <= 1844490): Error Code: 3822. Duplicate check constraint name 'dtc'.
[389, 15:28:21] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: Running...
[389, 15:28:21] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: Fetching...
[389, 15:28:21] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: 1 row(s) returned
[390, 15:28:21] ALTER TABLE HIV_death
ADD CONSTRAINT etc
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[390, 15:28:21] ALTER TABLE HIV_death
ADD CONSTRAINT etc
CHECK(death_num >= 0 AND
      death_num <= 1844490): 6153 row(s) affected
Records: 6153  Duplicates: 0  Warnings: 0
[391, 15:28:21] CREATE TRIGGER trg_HIV_death_before_insert
BEFORE INSERT ON HIV_death
FOR EACH ROW
BEGIN
    IF NEW.death_num < 0 THEN
        SET NEW.death_num = 0;
    ELSEIF NEW.death_num > 1844490 THEN
        SET NEW.death_num = 1844490;
    END IF;
END: Running...
[391, 15:28:21] CREATE TRIGGER trg_HIV_death_before_insert
BEFORE INSERT ON HIV_death
FOR EACH ROW
BEGIN
    IF NEW.death_num < 0 THEN
        SET NEW.death_num = 0;
    ELSEIF NEW.death_num > 1844490 THEN
        SET NEW.death_num = 1844490;
    END IF;
END: Error Code: 1359. Trigger already exists
[392, 21:54:28] CREATE OR REPLACE VIEW hiv_summary AS 
SELECT c.ISOYEAR, 
       COALESCE(hed.total_knowledge_rate, null) AS total_knowledge_rate,
       COALESCE(hd.death_num, null) AS death_num,
       COALESCE(hf.total_funding, null) AS total_funding,
       COALESCE(hc.woman_ratio, null) AS woman_ratio
FROM countries c 
LEFT JOIN HIV_education hed ON c.ISOYEAR = hed.ISOYEAR 
LEFT JOIN HIV_death hd ON c.ISOYEAR = hd.ISOYEAR 
LEFT JOIN HIV_funding hf ON c.ISOYEAR = hf.ISOYEAR 
LEFT JOIN HIV_cases hc ON c.ISOYEAR = hc.ISOYEAR 
ORDER BY c.ISOYEAR: Running...
[392, 21:54:28] CREATE OR REPLACE VIEW hiv_summary AS 
SELECT c.ISOYEAR, 
       COALESCE(hed.total_knowledge_rate, null) AS total_knowledge_rate,
       COALESCE(hd.death_num, null) AS death_num,
       COALESCE(hf.total_funding, null) AS total_funding,
       COALESCE(hc.woman_ratio, null) AS woman_ratio
FROM countries c 
LEFT JOIN HIV_education hed ON c.ISOYEAR = hed.ISOYEAR 
LEFT JOIN HIV_death hd ON c.ISOYEAR = hd.ISOYEAR 
LEFT JOIN HIV_funding hf ON c.ISOYEAR = hf.ISOYEAR 
LEFT JOIN HIV_cases hc ON c.ISOYEAR = hc.ISOYEAR 
ORDER BY c.ISOYEAR: 0 row(s) affected
[393, 21:54:28] DROP PROCEDURE IF EXISTS 306_step2.searchedISOYEAR: Running...
[393, 21:54:28] DROP PROCEDURE IF EXISTS 306_step2.searchedISOYEAR: 0 row(s) affected, 1 warning(s):
1305 PROCEDURE 306_step2.searchedISOYEAR does not exist
[394, 21:54:28] CREATE PROCEDURE searchedISOYEAR(IN isocheck VARCHAR(50))
BEGIN 
    SELECT S.ISOYEAR, S.death_num, S.total_knowledge_rate,S.total_funding,S.woman_ratio
    FROM hiv_summary S
    WHERE S.ISOYEAR = isocheck;

END: Running...
[394, 21:54:28] CREATE PROCEDURE searchedISOYEAR(IN isocheck VARCHAR(50))
BEGIN 
    SELECT S.ISOYEAR, S.death_num, S.total_knowledge_rate,S.total_funding,S.woman_ratio
    FROM hiv_summary S
    WHERE S.ISOYEAR = isocheck;

END: 0 row(s) affected
[395, 21:55:41] CREATE OR REPLACE VIEW hiv_summary AS 
SELECT c.ISOYEAR, 
       COALESCE(hed.total_knowledge_rate, null) AS total_knowledge_rate,
       COALESCE(hd.death_num, null) AS death_num,
       COALESCE(hf.total_funding, null) AS total_funding,
       COALESCE(hc.woman_ratio, null) AS woman_ratio
FROM countries c 
LEFT JOIN HIV_education hed ON c.ISOYEAR = hed.ISOYEAR 
LEFT JOIN HIV_death hd ON c.ISOYEAR = hd.ISOYEAR 
LEFT JOIN HIV_funding hf ON c.ISOYEAR = hf.ISOYEAR 
LEFT JOIN HIV_cases hc ON c.ISOYEAR = hc.ISOYEAR 
ORDER BY c.ISOYEAR: Running...
[395, 21:55:41] CREATE OR REPLACE VIEW hiv_summary AS 
SELECT c.ISOYEAR, 
       COALESCE(hed.total_knowledge_rate, null) AS total_knowledge_rate,
       COALESCE(hd.death_num, null) AS death_num,
       COALESCE(hf.total_funding, null) AS total_funding,
       COALESCE(hc.woman_ratio, null) AS woman_ratio
FROM countries c 
LEFT JOIN HIV_education hed ON c.ISOYEAR = hed.ISOYEAR 
LEFT JOIN HIV_death hd ON c.ISOYEAR = hd.ISOYEAR 
LEFT JOIN HIV_funding hf ON c.ISOYEAR = hf.ISOYEAR 
LEFT JOIN HIV_cases hc ON c.ISOYEAR = hc.ISOYEAR 
ORDER BY c.ISOYEAR: 0 row(s) affected
[396, 21:55:41] DROP PROCEDURE IF EXISTS 306_step2.searchedISOYEAR: Running...
[396, 21:55:41] DROP PROCEDURE IF EXISTS 306_step2.searchedISOYEAR: 0 row(s) affected
[397, 21:55:41] CREATE PROCEDURE searchedISOYEAR(IN isocheck VARCHAR(50))
BEGIN 
    SELECT S.ISOYEAR, S.death_num, S.total_knowledge_rate,S.total_funding,S.woman_ratio
    FROM hiv_summary S
    WHERE S.ISOYEAR = isocheck;

END: Running...
[397, 21:55:41] CREATE PROCEDURE searchedISOYEAR(IN isocheck VARCHAR(50))
BEGIN 
    SELECT S.ISOYEAR, S.death_num, S.total_knowledge_rate,S.total_funding,S.woman_ratio
    FROM hiv_summary S
    WHERE S.ISOYEAR = isocheck;

END: 0 row(s) affected
[398, 21:57:37] CALL searchedISOYEAR('AFG2016'): Running...
[398, 21:57:37] CALL searchedISOYEAR('AFG2016'): Fetching...
[398, 21:57:37] CALL searchedISOYEAR('AFG2016'): 1 row(s) returned
[399, 22:00:50] CALL searchedISOYEAR('AFG2016'): Running...
[399, 22:00:50] CALL searchedISOYEAR('AFG2016'): Fetching...
[399, 22:00:50] CALL searchedISOYEAR('AFG2016'): 1 row(s) returned
[400, 22:00:50] CALL searchedISOYEAR('GTM2002'): Running...
[400, 22:00:50] CALL searchedISOYEAR('GTM2002'): Fetching...
[400, 22:00:50] CALL searchedISOYEAR('GTM2002'): 1 row(s) returned
[401, 22:01:39] CALL searchedISOYEAR('AFG2016'): Running...
[401, 22:01:39] CALL searchedISOYEAR('AFG2016'): Fetching...
[401, 22:01:39] CALL searchedISOYEAR('AFG2016'): 1 row(s) returned
[402, 22:01:39] CALL searchedISOYEAR('CPV2007'): Running...
[402, 22:01:39] CALL searchedISOYEAR('CPV2007'): Fetching...
[402, 22:01:39] CALL searchedISOYEAR('CPV2007'): 1 row(s) returned
[403, 22:01:39] CALL searchedISOYEAR('GTM2002'): Running...
[403, 22:01:39] CALL searchedISOYEAR('GTM2002'): Fetching...
[403, 22:01:39] CALL searchedISOYEAR('GTM2002'): 1 row(s) returned
[1, 22:18:51] DROP VIEW `306_step2`.`highdeath`: Running...
[1, 22:18:51] DROP VIEW `306_step2`.`highdeath`: 0 row(s) affected
[2, 22:18:57] DROP VIEW `306_step2`.`higheducation`: Running...
[2, 22:18:57] DROP VIEW `306_step2`.`higheducation`: 0 row(s) affected
[3, 22:19:04] DROP VIEW `306_step2`.`highfunding`: Running...
[3, 22:19:04] DROP VIEW `306_step2`.`highfunding`: 0 row(s) affected
[4, 22:19:10] DROP VIEW `306_step2`.`highwomandeath`: Running...
[4, 22:19:10] DROP VIEW `306_step2`.`highwomandeath`: 0 row(s) affected
[5, 22:19:15] DROP VIEW `306_step2`.`lowdeath`: Running...
[5, 22:19:15] DROP VIEW `306_step2`.`lowdeath`: 0 row(s) affected
[6, 22:19:20] DROP VIEW `306_step2`.`loweducation`: Running...
[6, 22:19:20] DROP VIEW `306_step2`.`loweducation`: 0 row(s) affected
[7, 22:19:25] DROP VIEW `306_step2`.`lowfunding`: Running...
[7, 22:19:25] DROP VIEW `306_step2`.`lowfunding`: 0 row(s) affected
[8, 22:19:30] DROP VIEW `306_step2`.`lowwomandeath`: Running...
[8, 22:19:30] DROP VIEW `306_step2`.`lowwomandeath`: 0 row(s) affected
[1, 22:23:24] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: Running...
[1, 22:23:24] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: Fetching...
[1, 22:23:24] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num > 12000
LIMIT 0, 50000
: 50000 row(s) returned
[2, 22:23:24] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: Running...
[2, 22:23:24] CREATE VIEW highDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num > 12000: 0 row(s) affected
[3, 22:23:24] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: Running...
[3, 22:23:24] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: Fetching...
[3, 22:23:24] SELECT C.ISOYEAR, D.death_num
FROM countries C, HIV_death D
WHERE D.death_num < 12000
LIMIT 0, 50000
: 50000 row(s) returned
[4, 22:23:24] CREATE VIEW lowDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: Running...
[4, 22:23:24] CREATE VIEW lowDeath (ISOYEAR, death_num)
AS SELECT D.ISOYEAR, D.death_num
FROM  HIV_death D
WHERE D.death_num < 12000: 0 row(s) affected
[5, 22:23:24] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Running...
[5, 22:23:24] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: Fetching...
[5, 22:23:24] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio > 55
LIMIT 0, 50000
: 1146 row(s) returned
[6, 22:23:24] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: Running...
[6, 22:23:24] CREATE VIEW highWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio > 55: 0 row(s) affected
[7, 22:23:24] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Running...
[7, 22:23:24] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: Fetching...
[7, 22:23:24] SELECT C.ISOYEAR, C.woman_ratio
FROM  HIV_cases C
WHERE C.woman_ratio < 55
LIMIT 0, 50000
: 2977 row(s) returned
[8, 22:23:24] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: Running...
[8, 22:23:24] CREATE VIEW lowWomanDeath(ISOYEAR, woman_ratio)
AS SELECT D.ISOYEAR, D.woman_ratio
FROM  HIV_cases D
WHERE D.woman_ratio < 55: 0 row(s) affected
[9, 22:23:24] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Running...
[9, 22:23:24] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: Fetching...
[9, 22:23:24] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33
LIMIT 0, 50000
: 46 row(s) returned
[10, 22:23:24] CREATE VIEW lowEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: Running...
[10, 22:23:24] CREATE VIEW lowEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate < 33: 0 row(s) affected
[11, 22:23:24] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Running...
[11, 22:23:24] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: Fetching...
[11, 22:23:24] SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33
LIMIT 0, 50000
: 33 row(s) returned
[12, 22:23:24] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: Running...
[12, 22:23:24] CREATE VIEW highEducation (ISOYEAR, total_knowledge_rate)
AS SELECT E.ISOYEAR, E.total_knowledge_rate
FROM  HIV_education E
WHERE E.total_knowledge_rate > 33: 0 row(s) affected
[13, 22:23:24] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Running...
[13, 22:23:24] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: Fetching...
[13, 22:23:24] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding > 77185666
LIMIT 0, 50000
: 195 row(s) returned
[14, 22:23:24] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: Running...
[14, 22:23:24] CREATE VIEW highFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding > 77185666: 0 row(s) affected
[15, 22:23:24] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Running...
[15, 22:23:24] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: Fetching...
[15, 22:23:24] SELECT F.ISOYEAR, F.total_funding
FROM HIV_funding F
WHERE F.total_funding < 77185666
LIMIT 0, 50000
: 753 row(s) returned
[16, 22:23:24] CREATE VIEW lowFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: Running...
[16, 22:23:24] CREATE VIEW lowFunding (ISOYEAR, total_funding)
AS SELECT F.ISOYEAR, F.total_funding
FROM  HIV_funding F
WHERE F.total_funding < 77185666: 0 row(s) affected
[17, 22:23:56] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[17, 22:23:56] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[17, 22:23:56] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num >12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 141 row(s) returned
[18, 22:23:56] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Running...
[18, 22:23:56] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: Fetching...
[18, 22:23:56] SELECT F.ISOYEAR, L.ISOYEAR, L.death_num, F.total_funding
FROM HIV_death L, HIV_funding F
WHERE F.total_funding > 1844490 AND F.ISOYEAR NOT IN( L.death_num <12000 ) AND (F.ISOYEAR=L.ISOYEAR)
LIMIT 0, 50000
: 653 row(s) returned
[19, 22:23:56] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: Running...
[19, 22:23:56] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: Fetching...
[19, 22:23:56] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num >12000
LIMIT 0, 50000
: 141 row(s) returned
[20, 22:23:56] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: Running...
[20, 22:23:56] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: Fetching...
[20, 22:23:56] SELECT D.death_num, F.total_funding
FROM HIV_death D LEFT OUTER JOIN HIV_funding F
ON F.ISOYEAR = D.ISOYEAR WHERE F.total_funding > 1844490 AND D.death_num <12000
LIMIT 0, 50000
: 653 row(s) returned
[21, 22:24:05] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND F.ISOYEAR IN (
    SELECT ISOYEAR
    FROM lowDeath
  )
LIMIT 0, 50000
: Running...
[21, 22:24:05] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND F.ISOYEAR IN (
    SELECT ISOYEAR
    FROM lowDeath
  )
LIMIT 0, 50000
: Fetching...
[21, 22:24:05] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND F.ISOYEAR IN (
    SELECT ISOYEAR
    FROM lowDeath
  )
LIMIT 0, 50000
: 94 row(s) returned
[22, 22:24:05] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND EXISTS (
    SELECT S.ISOYEAR
    FROM lowDeath S
    WHERE ISOYEAR = F.ISOYEAR
  )
LIMIT 0, 50000
: Running...
[22, 22:24:05] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND EXISTS (
    SELECT S.ISOYEAR
    FROM lowDeath S
    WHERE ISOYEAR = F.ISOYEAR
  )
LIMIT 0, 50000
: Fetching...
[22, 22:24:05] SELECT F.ISOYEAR, F.total_funding, D.death_num
FROM highFunding F, lowDeath D
WHERE F.ISOYEAR = D.ISOYEAR
  AND EXISTS (
    SELECT S.ISOYEAR
    FROM lowDeath S
    WHERE ISOYEAR = F.ISOYEAR
  )
LIMIT 0, 50000
: 94 row(s) returned
[23, 22:24:17] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Running...
[23, 22:24:17] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: Fetching...
[23, 22:24:17] SELECT C.woman_ratio, C.ISOYEAR, AVG(E.total_knowledge_rate) AS higherthanavr
FROM HIV_cases C
INNER JOIN HIV_education E ON C.ISOYEAR = E.ISOYEAR
WHERE C.woman_ratio > (SELECT AVG(woman_ratio) FROM HIV_cases)
GROUP BY C.woman_ratio, C.ISOYEAR
HAVING AVG(E.total_knowledge_rate) <(SELECT AVG(total_knowledge_rate) FROM HIV_education)
LIMIT 0, 50000
: 28 row(s) returned
[24, 22:24:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Running...
[24, 22:24:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: Fetching...
[24, 22:24:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(f.total_funding) AS totalsum
FROM HIV_funding f
JOIN countries c ON f.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totalsum > AVG(f.total_funding)
LIMIT 0, 50000
: 156 row(s) returned
[25, 22:24:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Running...
[25, 22:24:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: Fetching...
[25, 22:24:17] SELECT c.country_name, COUNT(*) AS yearcount, SUM(D.death_num) AS totaldeath
,MIN(D.death_num) AS mindeath
,MAX(D.death_num) AS maxdeath
,(MAX(D.death_num) - MIN(D.death_num))/4 AS estimated_std
FROM HIV_death D
JOIN countries c ON D.ISOYEAR = c.ISOYEAR
GROUP BY c.country_name
HAVING totaldeath > AVG(D.death_num)
LIMIT 0, 50000
: 203 row(s) returned
[26, 22:24:17] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
  HAVING e.total_knowledge_rate>33
LIMIT 0, 50000
: Running...
[26, 22:24:17] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
  HAVING e.total_knowledge_rate>33
LIMIT 0, 50000
: Fetching...
[26, 22:24:17] SELECT  c.country_name, 
       ((MAX(D.death_num) - MIN(D.death_num))/4)AS estimated_std,
       e.total_knowledge_rate 
  FROM HIV_death D
  INNER JOIN countries c
  ON D.ISOYEAR = c.ISOYEAR
  INNER JOIN knowledge e
  ON e.country_name = c.country_name
  GROUP BY c.country_name, e.total_knowledge_rate
  HAVING e.total_knowledge_rate>33
LIMIT 0, 50000
: 33 row(s) returned
[27, 22:24:53] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: Running...
[27, 22:24:53] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: Fetching...
[27, 22:24:53] SELECT MIN(death_num), MAX(death_num) FROM hiv_death
LIMIT 0, 50000
: 1 row(s) returned
[28, 22:24:53] ALTER TABLE HIV_death
ADD CONSTRAINT dtc
CHECK(death_num >= 0 AND
      death_num <= 1844490): Running...
[28, 22:24:53] ALTER TABLE HIV_death
ADD CONSTRAINT dtc
CHECK(death_num >= 0 AND
      death_num <= 1844490): Error Code: 3822. Duplicate check constraint name 'dtc'.
[29, 22:25:47] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, '2022-Turkey'): Running...
[29, 22:25:47] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, '2022-Turkey'): Error Code: 1062. Duplicate entry '2022-2022-Turkey' for key 'hiv_death.PRIMARY'
[30, 22:27:20] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, 'TUR2022'): Running...
[30, 22:27:20] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, 'TUR2022'): 1 row(s) affected
[31, 22:27:20] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1990, -5, 'TUR1990'): Running...
[31, 22:27:20] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1990, -5, 'TUR1990'): Error Code: 1062. Duplicate entry '1990-TUR1990' for key 'hiv_death.PRIMARY'
[32, 22:27:28] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, 'TUR2022'): Running...
[32, 22:27:28] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, 'TUR2022'): Error Code: 1062. Duplicate entry '2022-TUR2022' for key 'hiv_death.PRIMARY'
[33, 22:27:32] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, 'TUR2022'): Running...
[33, 22:27:32] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (2022, 15000, 'TUR2022'): Error Code: 1062. Duplicate entry '2022-TUR2022' for key 'hiv_death.PRIMARY'
[34, 22:27:53] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1996, 15000, 'TUR1996'): Running...
[34, 22:27:53] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1996, 15000, 'TUR1996'): Error Code: 1062. Duplicate entry '1996-TUR1996' for key 'hiv_death.PRIMARY'
[35, 22:29:00] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1996, 15000, 'END1996'): Running...
[35, 22:29:00] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1996, 15000, 'END1996'): 1 row(s) affected
[36, 22:29:00] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1990, -5, 'TUR1990'): Running...
[36, 22:29:00] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1990, -5, 'TUR1990'): Error Code: 1062. Duplicate entry '1990-TUR1990' for key 'hiv_death.PRIMARY'
[37, 22:29:09] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1996, 15000, 'END1996'): Running...
[37, 22:29:09] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1996, 15000, 'END1996'): Error Code: 1062. Duplicate entry '1996-END1996' for key 'hiv_death.PRIMARY'
[38, 22:30:55] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1996, 15000, 'END1996'): Running...
[38, 22:30:55] INSERT INTO HIV_death (dyear, death_num, ISOYEAR) VALUES (1996, 15000, 'END1996'): Error Code: 1062. Duplicate entry '1996-END1996' for key 'hiv_death.PRIMARY'
[39, 22:31:23] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: Running...
[39, 22:31:23] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: Fetching...
[39, 22:31:23] SELECT * FROM 306_step2.HIV_death
LIMIT 0, 50000
: 6155 row(s) returned
[40, 22:33:34] CREATE OR REPLACE VIEW hiv_summary AS 
SELECT c.ISOYEAR, 
       COALESCE(hed.total_knowledge_rate, null) AS total_knowledge_rate,
       COALESCE(hd.death_num, null) AS death_num,
       COALESCE(hf.total_funding, null) AS total_funding,
       COALESCE(hc.woman_ratio, null) AS woman_ratio
FROM countries c 
LEFT JOIN HIV_education hed ON c.ISOYEAR = hed.ISOYEAR 
LEFT JOIN HIV_death hd ON c.ISOYEAR = hd.ISOYEAR 
LEFT JOIN HIV_funding hf ON c.ISOYEAR = hf.ISOYEAR 
LEFT JOIN HIV_cases hc ON c.ISOYEAR = hc.ISOYEAR 
ORDER BY c.ISOYEAR: Running...
[40, 22:33:34] CREATE OR REPLACE VIEW hiv_summary AS 
SELECT c.ISOYEAR, 
       COALESCE(hed.total_knowledge_rate, null) AS total_knowledge_rate,
       COALESCE(hd.death_num, null) AS death_num,
       COALESCE(hf.total_funding, null) AS total_funding,
       COALESCE(hc.woman_ratio, null) AS woman_ratio
FROM countries c 
LEFT JOIN HIV_education hed ON c.ISOYEAR = hed.ISOYEAR 
LEFT JOIN HIV_death hd ON c.ISOYEAR = hd.ISOYEAR 
LEFT JOIN HIV_funding hf ON c.ISOYEAR = hf.ISOYEAR 
LEFT JOIN HIV_cases hc ON c.ISOYEAR = hc.ISOYEAR 
ORDER BY c.ISOYEAR: 0 row(s) affected
[41, 22:33:34] DROP PROCEDURE IF EXISTS 306_step2.searchedISOYEAR: Running...
[41, 22:33:34] DROP PROCEDURE IF EXISTS 306_step2.searchedISOYEAR: 0 row(s) affected
[42, 22:33:34] CREATE PROCEDURE searchedISOYEAR(IN isocheck VARCHAR(50))
BEGIN 
    SELECT S.ISOYEAR, S.death_num, S.total_knowledge_rate,S.total_funding,S.woman_ratio
    FROM hiv_summary S
    WHERE S.ISOYEAR = isocheck;

END: Running...
[42, 22:33:34] CREATE PROCEDURE searchedISOYEAR(IN isocheck VARCHAR(50))
BEGIN 
    SELECT S.ISOYEAR, S.death_num, S.total_knowledge_rate,S.total_funding,S.woman_ratio
    FROM hiv_summary S
    WHERE S.ISOYEAR = isocheck;

END: 0 row(s) affected
[43, 22:33:42] CALL searchedISOYEAR('AFG2016'): Running...
[43, 22:33:42] CALL searchedISOYEAR('AFG2016'): Fetching...
[43, 22:33:42] CALL searchedISOYEAR('AFG2016'): 1 row(s) returned
[44, 22:33:42] CALL searchedISOYEAR('CPV2007'): Running...
[44, 22:33:42] CALL searchedISOYEAR('CPV2007'): Fetching...
[44, 22:33:42] CALL searchedISOYEAR('CPV2007'): 1 row(s) returned
[45, 22:33:42] CALL searchedISOYEAR('GTM2002'): Running...
[45, 22:33:42] CALL searchedISOYEAR('GTM2002'): Fetching...
[45, 22:33:42] CALL searchedISOYEAR('GTM2002'): 1 row(s) returned
